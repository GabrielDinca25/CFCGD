#pragma once

enum NodeTypes
{
	NODE_INT,
	NODE_FLOAT,
	NODE_ID,
	NODE_CHAR,
	NODE_STRING,
	NODE_SCOMMENT,
	NODE_MCOMMENT,
	NODE_KEYWORD_AUTO,
	NODE_KEYWORD_BREAK,
	NODE_KEYWORD_CASE,
	NODE_KEYWORD_CHAR,
	NODE_KEYWORD_CONST,
	NODE_KEYWORD_CONTINUE,
	NODE_KEYWORD_DEFAULT,
	NODE_KEYWORD_DO,
	NODE_KEYWORD_DOUBLE,
	NODE_KEYWORD_ELSE,
	NODE_KEYWORD_ENUM,
	NODE_KEYWORD_EXTERN,
	NODE_KEYWORD_FLOAT,
	NODE_KEYWORD_FOR,
	NODE_KEYWORD_GOTO,
	NODE_KEYWORD_IF,
	NODE_KEYWORD_INT,
	NODE_KEYWORD_LONG,
	NODE_KEYWORD_REGISTER,
	NODE_KEYWORD_RETURN,
	NODE_KEYWORD_SHORT,
	NODE_KEYWORD_SIGNED,
	NODE_KEYWORD_SIZEOF,
	NODE_KEYWORD_STATIC,
	NODE_KEYWORD_STRUCT,
	NODE_KEYWORD_SWITCH,
	NODE_KEYWORD_TYPEDEF,
	NODE_KEYWORD_DEFINE,
	NODE_KEYWORD_UNION,
	NODE_KEYWORD_UNSIGNED,
	NODE_KEYWORD_VOID,
	NODE_KEYWORD_VOLATILE,
	NODE_KEYWORD_WHILE,

	NODE_THREE_DOTS,
	NODE_RIGHT_SHIFT_EQUALS,
	NODE_LEFT_SHIFT_EQUALS,
	NODE_INCREMENT_EQUALS,
	NODE_EQUALS,
	NODE_DECREMENT_EQUALS,
	NODE_MULTIPLY_EQUALS,
	NODE_DIVIDE_EQUALS,
	NODE_BITWISE_AND_EQUALS,
	NODE_BITWISE_XOR_EQUALS,
	NODE_BITWISE_OR_EQUALS,
	NODE_RIGHT_SHIFT,
	NODE_INCREMENT,
	NODE_DECREMENT,
	NODE_ARROW,
	NODE_LOGICAL_AND,
	NODE_LOGICAL_OR,
	NODE_LESS_EQUAL,
	NODE_GREATER_EQUAL,
	NODE_LESS_EQUAL,

};