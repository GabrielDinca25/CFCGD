Nonterminals useless in grammar

   declaration
   init_declarator_list
   init_declarator
   initializer
   initializer_list
   statement
   labeled_statement
   compound_statement
   declaration_list
   statement_list
   expression_statement
   selection_statement
   iteration_statement
   external_declaration
   function_definition


Terminals unused in grammar

   SCOMMENT
   MCOMMENT
   CASE
   DEFAULT
   DO
   ELSE
   FOR
   IF
   SIZEOF
   SWITCH
   DEFINE
   WHILE
   ASSIGNMENT
   BITWISE_XOR_ASSIGNMENT
   DOT
   BITWISE_AND
   NOT
   TILDA
   MINUS
   PLUS
   MULTIPLY
   DIVIDE
   MODULO
   LESS
   GREATER
   XOR
   BITWISE_OR
   CONDITIONAL
   OPEN_PARANTHESIS
   CLOSED_PARANTHESIS
   OPEN_BRACKETS
   CLOSED_BRACKETS
   OPEN_BRACES
   CLOSED_BRACES
   UNKNOWN
   INVALID_SYNTAX


Rules useless in grammar

  163 declaration: declaration_specifiers ';'
  164            | declaration_specifiers init_declarator_list ';'

  165 init_declarator_list: init_declarator
  166                     | init_declarator_list ',' init_declarator

  167 init_declarator: declarator
  168                | declarator '=' initializer

  169 initializer: assignment_expression
  170            | '{' initializer_list '}'
  171            | '{' initializer_list ',' '}'

  172 initializer_list: initializer
  173                 | initializer_list ',' initializer

  174 statement: labeled_statement
  175          | compound_statement
  176          | expression_statement
  177          | selection_statement
  178          | iteration_statement
  179          | jump_statement

  180 labeled_statement: ID ':' statement
  181                  | CASE constant_expression ':' statement
  182                  | DEFAULT ':' statement

  183 compound_statement: '{' '}'
  184                   | '{' statement_list '}'
  185                   | '{' declaration_list '}'
  186                   | '{' declaration_list statement_list '}'

  187 declaration_list: declaration
  188                 | declaration_list declaration

  189 statement_list: statement
  190               | statement_list statement

  191 expression_statement: ';'
  192                     | expression ';'

  193 selection_statement: IF '(' expression ')' statement
  194                    | IF '(' expression ')' statement ELSE statement
  195                    | SWITCH '(' expression ')' statement

  196 iteration_statement: WHILE '(' expression ')' statement
  197                    | DO statement WHILE '(' expression ')' ';'
  198                    | FOR '(' expression_statement expression_statement ')' statement
  199                    | FOR '(' expression_statement expression_statement expression ')' statement

  200 external_declaration: function_definition
  201                     | declaration

  202 function_definition: declaration_specifiers declarator declaration_list compound_statement
  203                    | declaration_specifiers declarator compound_statement
  204                    | declarator declaration_list compound_statement
  205                    | declarator compound_statement


Grammar

    0 $accept: jump_statement $end

    1 expression: assignment_expression
    2           | expression ',' assignment_expression

    3 constant_expression: conditional_expression

    4 assignment_expression: conditional_expression
    5                      | unary_expression assignment_operator assignment_expression

    6 conditional_expression: logical_or_expression
    7                       | logical_or_expression '?' expression ':' conditional_expression

    8 logical_or_expression: logical_and_expression
    9                      | logical_or_expression LOGICAL_OR logical_and_expression

   10 logical_and_expression: inclusive_or_expression
   11                       | logical_and_expression LOGICAL_AND inclusive_or_expression

   12 inclusive_or_expression: exclusive_or_expression
   13                        | inclusive_or_expression '|' exclusive_or_expression

   14 exclusive_or_expression: and_expression
   15                        | exclusive_or_expression '^' and_expression

   16 and_expression: equality_expression
   17               | and_expression '&' equality_expression

   18 equality_expression: relational_expression
   19                    | equality_expression EQUAL relational_expression
   20                    | equality_expression NOT_EQUAL relational_expression

   21 relational_expression: shift_expression
   22                      | relational_expression '<' shift_expression
   23                      | relational_expression '>' shift_expression
   24                      | relational_expression LESS_EQUAL shift_expression
   25                      | relational_expression GREATER_EQUAL shift_expression

   26 shift_expression: additive_expression
   27                 | shift_expression LEFT_SHIFT additive_expression
   28                 | shift_expression RIGHT_SHIFT additive_expression

   29 additive_expression: multiplicative_expression
   30                    | additive_expression '+' multiplicative_expression
   31                    | additive_expression '-' multiplicative_expression

   32 multiplicative_expression: cast_expression
   33                          | multiplicative_expression '*' cast_expression
   34                          | multiplicative_expression '/' cast_expression
   35                          | multiplicative_expression '%' cast_expression

   36 assignment_operator: '='
   37                    | MULTIPLY_ASSIGNMENT
   38                    | DIVIDE_ASSIGNMENT
   39                    | MOD_ASSIGNMENT
   40                    | INCREMENT_ASSIGNMENT
   41                    | DECREMENT_ASSIGNMENT
   42                    | LEFT_SHIFT_ASSIGNMENT
   43                    | RIGHT_SHIFT_ASSIGNMENT
   44                    | BITWISE_AND_ASSIGNMENT
   45                    | XOR_ASSIGNMENT
   46                    | BITWISE_OR_ASSIGNMENT

   47 unary_expression: postfix_expression
   48                 | INCREMENT unary_expression
   49                 | DECREMENT unary_expression
   50                 | unary_operator cast_expression

   51 unary_operator: '&'
   52               | '*'
   53               | '+'
   54               | '-'
   55               | '~'
   56               | '!'

   57 cast_expression: unary_expression
   58                | '(' type_name ')' cast_expression

   59 postfix_expression: primary_expression
   60                   | postfix_expression '[' expression ']'
   61                   | postfix_expression '(' ')'
   62                   | postfix_expression '(' argument_expression_list ')'
   63                   | postfix_expression '.' ID
   64                   | postfix_expression ARROW ID
   65                   | postfix_expression INCREMENT
   66                   | postfix_expression DECREMENT

   67 argument_expression_list: assignment_expression
   68                         | argument_expression_list ',' assignment_expression

   69 primary_expression: ID
   70                   | STRING
   71                   | '(' expression ')'

   72 declaration_specifiers: storage_class_specifier
   73                       | storage_class_specifier declaration_specifiers
   74                       | type_specifier
   75                       | type_specifier declaration_specifiers
   76                       | type_qualifier
   77                       | type_qualifier declaration_specifiers

   78 storage_class_specifier: TYPEDEF
   79                        | EXTERN
   80                        | STATIC
   81                        | AUTO
   82                        | REGISTER

   83 type_specifier: VOID
   84               | CHAR
   85               | SHORT
   86               | INT
   87               | LONG
   88               | FLOAT
   89               | DOUBLE
   90               | SIGNED
   91               | UNSIGNED
   92               | struct_or_union_specifier
   93               | enum_specifier

   94 struct_or_union_specifier: struct_or_union ID '{' struct_declaration_list '}'
   95                          | struct_or_union '{' struct_declaration_list '}'
   96                          | struct_or_union ID

   97 struct_or_union: STRUCT
   98                | UNION

   99 struct_declaration_list: struct_declaration
  100                        | struct_declaration_list struct_declaration

  101 struct_declaration: specifier_qualifier_list struct_declarator_list ';'

  102 specifier_qualifier_list: type_specifier specifier_qualifier_list
  103                         | type_specifier
  104                         | type_qualifier specifier_qualifier_list
  105                         | type_qualifier

  106 struct_declarator_list: struct_declarator
  107                       | struct_declarator_list ',' struct_declarator

  108 struct_declarator: declarator
  109                  | ':' constant_expression
  110                  | declarator ':' constant_expression

  111 enum_specifier: ENUM '{' enumerator_list '}'
  112               | ENUM ID '{' enumerator_list '}'
  113               | ENUM ID

  114 enumerator_list: enumerator
  115                | enumerator_list ',' enumerator

  116 enumerator: ID
  117           | ID '=' constant_expression

  118 type_qualifier: CONST
  119               | VOLATILE

  120 declarator: pointer direct_declarator
  121           | direct_declarator

  122 direct_declarator: ID
  123                  | '(' declarator ')'
  124                  | direct_declarator '[' constant_expression ']'
  125                  | direct_declarator '[' ']'
  126                  | direct_declarator '(' parameter_type_list ')'
  127                  | direct_declarator '(' identifier_list ')'
  128                  | direct_declarator '(' ')'

  129 pointer: '*'
  130        | '*' type_qualifier_list
  131        | '*' pointer
  132        | '*' type_qualifier_list pointer

  133 type_qualifier_list: type_qualifier
  134                    | type_qualifier_list type_qualifier

  135 parameter_type_list: parameter_list
  136                    | parameter_list ',' THREE_DOTS

  137 parameter_list: parameter_declaration
  138               | parameter_list ',' parameter_declaration

  139 parameter_declaration: declaration_specifiers declarator
  140                      | declaration_specifiers abstract_declarator
  141                      | declaration_specifiers

  142 identifier_list: ID
  143                | identifier_list ',' ID

  144 type_name: specifier_qualifier_list
  145          | specifier_qualifier_list abstract_declarator

  146 abstract_declarator: pointer
  147                    | direct_abstract_declarator
  148                    | pointer direct_abstract_declarator

  149 direct_abstract_declarator: '(' abstract_declarator ')'
  150                           | '[' ']'
  151                           | '[' constant_expression ']'
  152                           | direct_abstract_declarator '[' ']'
  153                           | direct_abstract_declarator '[' constant_expression ']'
  154                           | '(' ')'
  155                           | '(' parameter_type_list ')'
  156                           | direct_abstract_declarator '(' ')'
  157                           | direct_abstract_declarator '(' parameter_type_list ')'

  158 jump_statement: GOTO ID SEMICOLON
  159               | CONTINUE SEMICOLON
  160               | BREAK SEMICOLON
  161               | RETURN SEMICOLON
  162               | RETURN expression SEMICOLON


Terminals, with rules where they appear

$end (0) 0
'!' (33) 56
'%' (37) 35
'&' (38) 17 51
'(' (40) 58 61 62 71 123 126 127 128 149 154 155 156 157
')' (41) 58 61 62 71 123 126 127 128 149 154 155 156 157
'*' (42) 33 52 129 130 131 132
'+' (43) 30 53
',' (44) 2 68 107 115 136 138 143
'-' (45) 31 54
'.' (46) 63
'/' (47) 34
':' (58) 7 109 110
';' (59) 101
'<' (60) 22
'=' (61) 36 117
'>' (62) 23
'?' (63) 7
'[' (91) 60 124 125 150 151 152 153
']' (93) 60 124 125 150 151 152 153
'^' (94) 15
'{' (123) 94 95 111 112
'|' (124) 13
'}' (125) 94 95 111 112
'~' (126) 55
error (256)
INT (258) 86
FLOAT (259) 88
ID (260) 63 64 69 94 96 112 113 116 117 122 142 143 158
CHAR (261) 84
STRING (262) 70
SCOMMENT (263)
MCOMMENT (264)
AUTO (265) 81
BREAK (266) 160
CASE (267)
CONST (268) 118
CONTINUE (269) 159
DEFAULT (270)
DO (271)
DOUBLE (272) 89
ELSE (273)
ENUM (274) 111 112 113
EXTERN (275) 79
FOR (276)
GOTO (277) 158
IF (278)
LONG (279) 87
REGISTER (280) 82
RETURN (281) 161 162
SHORT (282) 85
SIGNED (283) 90
SIZEOF (284)
STATIC (285) 80
STRUCT (286) 97
SWITCH (287)
TYPEDEF (288) 78
DEFINE (289)
UNION (290) 98
UNSIGNED (291) 91
VOID (292) 83
VOLATILE (293) 119
WHILE (294)
THREE_DOTS (295) 136
RIGHT_SHIFT_ASSIGNMENT (296) 43
LEFT_SHIFT_ASSIGNMENT (297) 42
INCREMENT_ASSIGNMENT (298) 40
ASSIGNMENT (299)
DECREMENT_ASSIGNMENT (300) 41
MULTIPLY_ASSIGNMENT (301) 37
DIVIDE_ASSIGNMENT (302) 38
MOD_ASSIGNMENT (303) 39
BITWISE_AND_ASSIGNMENT (304) 44
BITWISE_XOR_ASSIGNMENT (305)
BITWISE_OR_ASSIGNMENT (306) 46
LEFT_SHIFT (307) 27
RIGHT_SHIFT (308) 28
INCREMENT (309) 48 65
DECREMENT (310) 49 66
ARROW (311) 64
LOGICAL_AND (312) 11
LOGICAL_OR (313) 9
LESS_EQUAL (314) 24
GREATER_EQUAL (315) 25
EQUAL (316) 19
NOT_EQUAL (317) 20
SEMICOLON (318) 158 159 160 161 162
DOT (319)
BITWISE_AND (320)
NOT (321)
TILDA (322)
MINUS (323)
PLUS (324)
MULTIPLY (325)
DIVIDE (326)
MODULO (327)
LESS (328)
GREATER (329)
XOR (330)
XOR_ASSIGNMENT (331) 45
BITWISE_OR (332)
CONDITIONAL (333)
OPEN_PARANTHESIS (334)
CLOSED_PARANTHESIS (335)
OPEN_BRACKETS (336)
CLOSED_BRACKETS (337)
OPEN_BRACES (338)
CLOSED_BRACES (339)
UNKNOWN (340)
INVALID_SYNTAX (341)


Nonterminals, with rules where they appear

$accept (111)
    on left: 0
expression (112)
    on left: 1 2, on right: 2 7 60 71 162
constant_expression (113)
    on left: 3, on right: 109 110 117 124 151 153
assignment_expression (114)
    on left: 4 5, on right: 1 2 5 67 68
conditional_expression (115)
    on left: 6 7, on right: 3 4 7
logical_or_expression (116)
    on left: 8 9, on right: 6 7 9
logical_and_expression (117)
    on left: 10 11, on right: 8 9 11
inclusive_or_expression (118)
    on left: 12 13, on right: 10 11 13
exclusive_or_expression (119)
    on left: 14 15, on right: 12 13 15
and_expression (120)
    on left: 16 17, on right: 14 15 17
equality_expression (121)
    on left: 18 19 20, on right: 16 17 19 20
relational_expression (122)
    on left: 21 22 23 24 25, on right: 18 19 20 22 23 24 25
shift_expression (123)
    on left: 26 27 28, on right: 21 22 23 24 25 27 28
additive_expression (124)
    on left: 29 30 31, on right: 26 27 28 30 31
multiplicative_expression (125)
    on left: 32 33 34 35, on right: 29 30 31 33 34 35
assignment_operator (126)
    on left: 36 37 38 39 40 41 42 43 44 45 46, on right: 5
unary_expression (127)
    on left: 47 48 49 50, on right: 5 48 49 57
unary_operator (128)
    on left: 51 52 53 54 55 56, on right: 50
cast_expression (129)
    on left: 57 58, on right: 32 33 34 35 50 58
postfix_expression (130)
    on left: 59 60 61 62 63 64 65 66, on right: 47 60 61 62 63 64 65
    66
argument_expression_list (131)
    on left: 67 68, on right: 62 68
primary_expression (132)
    on left: 69 70 71, on right: 59
declaration_specifiers (133)
    on left: 72 73 74 75 76 77, on right: 73 75 77 139 140 141
storage_class_specifier (134)
    on left: 78 79 80 81 82, on right: 72 73
type_specifier (135)
    on left: 83 84 85 86 87 88 89 90 91 92 93, on right: 74 75 102
    103
struct_or_union_specifier (136)
    on left: 94 95 96, on right: 92
struct_or_union (137)
    on left: 97 98, on right: 94 95 96
struct_declaration_list (138)
    on left: 99 100, on right: 94 95 100
struct_declaration (139)
    on left: 101, on right: 99 100
specifier_qualifier_list (140)
    on left: 102 103 104 105, on right: 101 102 104 144 145
struct_declarator_list (141)
    on left: 106 107, on right: 101 107
struct_declarator (142)
    on left: 108 109 110, on right: 106 107
enum_specifier (143)
    on left: 111 112 113, on right: 93
enumerator_list (144)
    on left: 114 115, on right: 111 112 115
enumerator (145)
    on left: 116 117, on right: 114 115
type_qualifier (146)
    on left: 118 119, on right: 76 77 104 105 133 134
declarator (147)
    on left: 120 121, on right: 108 110 123 139
direct_declarator (148)
    on left: 122 123 124 125 126 127 128, on right: 120 121 124 125
    126 127 128
pointer (149)
    on left: 129 130 131 132, on right: 120 131 132 146 148
type_qualifier_list (150)
    on left: 133 134, on right: 130 132 134
parameter_type_list (151)
    on left: 135 136, on right: 126 155 157
parameter_list (152)
    on left: 137 138, on right: 135 136 138
parameter_declaration (153)
    on left: 139 140 141, on right: 137 138
identifier_list (154)
    on left: 142 143, on right: 127 143
type_name (155)
    on left: 144 145, on right: 58
abstract_declarator (156)
    on left: 146 147 148, on right: 140 145 149
direct_abstract_declarator (157)
    on left: 149 150 151 152 153 154 155 156 157, on right: 147 148
    152 153 156 157
jump_statement (158)
    on left: 158 159 160 161 162, on right: 0


State 0

    0 $accept: . jump_statement $end

    BREAK     shift, and go to state 1
    CONTINUE  shift, and go to state 2
    GOTO      shift, and go to state 3
    RETURN    shift, and go to state 4

    jump_statement  go to state 5


State 1

  160 jump_statement: BREAK . SEMICOLON

    SEMICOLON  shift, and go to state 6


State 2

  159 jump_statement: CONTINUE . SEMICOLON

    SEMICOLON  shift, and go to state 7


State 3

  158 jump_statement: GOTO . ID SEMICOLON

    ID  shift, and go to state 8


State 4

  161 jump_statement: RETURN . SEMICOLON
  162               | RETURN . expression SEMICOLON

    ID         shift, and go to state 9
    STRING     shift, and go to state 10
    INCREMENT  shift, and go to state 11
    DECREMENT  shift, and go to state 12
    SEMICOLON  shift, and go to state 13
    '&'        shift, and go to state 14
    '+'        shift, and go to state 15
    '-'        shift, and go to state 16
    '*'        shift, and go to state 17
    '~'        shift, and go to state 18
    '!'        shift, and go to state 19
    '('        shift, and go to state 20

    expression                 go to state 21
    assignment_expression      go to state 22
    conditional_expression     go to state 23
    logical_or_expression      go to state 24
    logical_and_expression     go to state 25
    inclusive_or_expression    go to state 26
    exclusive_or_expression    go to state 27
    and_expression             go to state 28
    equality_expression        go to state 29
    relational_expression      go to state 30
    shift_expression           go to state 31
    additive_expression        go to state 32
    multiplicative_expression  go to state 33
    unary_expression           go to state 34
    unary_operator             go to state 35
    cast_expression            go to state 36
    postfix_expression         go to state 37
    primary_expression         go to state 38


State 5

    0 $accept: jump_statement . $end

    $end  shift, and go to state 39


State 6

  160 jump_statement: BREAK SEMICOLON .

    $default  reduce using rule 160 (jump_statement)


State 7

  159 jump_statement: CONTINUE SEMICOLON .

    $default  reduce using rule 159 (jump_statement)


State 8

  158 jump_statement: GOTO ID . SEMICOLON

    SEMICOLON  shift, and go to state 40


State 9

   69 primary_expression: ID .

    $default  reduce using rule 69 (primary_expression)


State 10

   70 primary_expression: STRING .

    $default  reduce using rule 70 (primary_expression)


State 11

   48 unary_expression: INCREMENT . unary_expression

    ID         shift, and go to state 9
    STRING     shift, and go to state 10
    INCREMENT  shift, and go to state 11
    DECREMENT  shift, and go to state 12
    '&'        shift, and go to state 14
    '+'        shift, and go to state 15
    '-'        shift, and go to state 16
    '*'        shift, and go to state 17
    '~'        shift, and go to state 18
    '!'        shift, and go to state 19
    '('        shift, and go to state 41

    unary_expression    go to state 42
    unary_operator      go to state 35
    postfix_expression  go to state 37
    primary_expression  go to state 38


State 12

   49 unary_expression: DECREMENT . unary_expression

    ID         shift, and go to state 9
    STRING     shift, and go to state 10
    INCREMENT  shift, and go to state 11
    DECREMENT  shift, and go to state 12
    '&'        shift, and go to state 14
    '+'        shift, and go to state 15
    '-'        shift, and go to state 16
    '*'        shift, and go to state 17
    '~'        shift, and go to state 18
    '!'        shift, and go to state 19
    '('        shift, and go to state 41

    unary_expression    go to state 43
    unary_operator      go to state 35
    postfix_expression  go to state 37
    primary_expression  go to state 38


State 13

  161 jump_statement: RETURN SEMICOLON .

    $default  reduce using rule 161 (jump_statement)


State 14

   51 unary_operator: '&' .

    $default  reduce using rule 51 (unary_operator)


State 15

   53 unary_operator: '+' .

    $default  reduce using rule 53 (unary_operator)


State 16

   54 unary_operator: '-' .

    $default  reduce using rule 54 (unary_operator)


State 17

   52 unary_operator: '*' .

    $default  reduce using rule 52 (unary_operator)


State 18

   55 unary_operator: '~' .

    $default  reduce using rule 55 (unary_operator)


State 19

   56 unary_operator: '!' .

    $default  reduce using rule 56 (unary_operator)


State 20

   58 cast_expression: '(' . type_name ')' cast_expression
   71 primary_expression: '(' . expression ')'

    INT        shift, and go to state 44
    FLOAT      shift, and go to state 45
    ID         shift, and go to state 9
    CHAR       shift, and go to state 46
    STRING     shift, and go to state 10
    CONST      shift, and go to state 47
    DOUBLE     shift, and go to state 48
    ENUM       shift, and go to state 49
    LONG       shift, and go to state 50
    SHORT      shift, and go to state 51
    SIGNED     shift, and go to state 52
    STRUCT     shift, and go to state 53
    UNION      shift, and go to state 54
    UNSIGNED   shift, and go to state 55
    VOID       shift, and go to state 56
    VOLATILE   shift, and go to state 57
    INCREMENT  shift, and go to state 11
    DECREMENT  shift, and go to state 12
    '&'        shift, and go to state 14
    '+'        shift, and go to state 15
    '-'        shift, and go to state 16
    '*'        shift, and go to state 17
    '~'        shift, and go to state 18
    '!'        shift, and go to state 19
    '('        shift, and go to state 20

    expression                 go to state 58
    assignment_expression      go to state 22
    conditional_expression     go to state 23
    logical_or_expression      go to state 24
    logical_and_expression     go to state 25
    inclusive_or_expression    go to state 26
    exclusive_or_expression    go to state 27
    and_expression             go to state 28
    equality_expression        go to state 29
    relational_expression      go to state 30
    shift_expression           go to state 31
    additive_expression        go to state 32
    multiplicative_expression  go to state 33
    unary_expression           go to state 34
    unary_operator             go to state 35
    cast_expression            go to state 36
    postfix_expression         go to state 37
    primary_expression         go to state 38
    type_specifier             go to state 59
    struct_or_union_specifier  go to state 60
    struct_or_union            go to state 61
    specifier_qualifier_list   go to state 62
    enum_specifier             go to state 63
    type_qualifier             go to state 64
    type_name                  go to state 65


State 21

    2 expression: expression . ',' assignment_expression
  162 jump_statement: RETURN expression . SEMICOLON

    SEMICOLON  shift, and go to state 66
    ','        shift, and go to state 67


State 22

    1 expression: assignment_expression .

    $default  reduce using rule 1 (expression)


State 23

    4 assignment_expression: conditional_expression .

    $default  reduce using rule 4 (assignment_expression)


State 24

    6 conditional_expression: logical_or_expression .
    7                       | logical_or_expression . '?' expression ':' conditional_expression
    9 logical_or_expression: logical_or_expression . LOGICAL_OR logical_and_expression

    LOGICAL_OR  shift, and go to state 68
    '?'         shift, and go to state 69

    $default  reduce using rule 6 (conditional_expression)


State 25

    8 logical_or_expression: logical_and_expression .
   11 logical_and_expression: logical_and_expression . LOGICAL_AND inclusive_or_expression

    LOGICAL_AND  shift, and go to state 70

    $default  reduce using rule 8 (logical_or_expression)


State 26

   10 logical_and_expression: inclusive_or_expression .
   13 inclusive_or_expression: inclusive_or_expression . '|' exclusive_or_expression

    '|'  shift, and go to state 71

    $default  reduce using rule 10 (logical_and_expression)


State 27

   12 inclusive_or_expression: exclusive_or_expression .
   15 exclusive_or_expression: exclusive_or_expression . '^' and_expression

    '^'  shift, and go to state 72

    $default  reduce using rule 12 (inclusive_or_expression)


State 28

   14 exclusive_or_expression: and_expression .
   17 and_expression: and_expression . '&' equality_expression

    '&'  shift, and go to state 73

    $default  reduce using rule 14 (exclusive_or_expression)


State 29

   16 and_expression: equality_expression .
   19 equality_expression: equality_expression . EQUAL relational_expression
   20                    | equality_expression . NOT_EQUAL relational_expression

    EQUAL      shift, and go to state 74
    NOT_EQUAL  shift, and go to state 75

    $default  reduce using rule 16 (and_expression)


State 30

   18 equality_expression: relational_expression .
   22 relational_expression: relational_expression . '<' shift_expression
   23                      | relational_expression . '>' shift_expression
   24                      | relational_expression . LESS_EQUAL shift_expression
   25                      | relational_expression . GREATER_EQUAL shift_expression

    LESS_EQUAL     shift, and go to state 76
    GREATER_EQUAL  shift, and go to state 77
    '<'            shift, and go to state 78
    '>'            shift, and go to state 79

    $default  reduce using rule 18 (equality_expression)


State 31

   21 relational_expression: shift_expression .
   27 shift_expression: shift_expression . LEFT_SHIFT additive_expression
   28                 | shift_expression . RIGHT_SHIFT additive_expression

    LEFT_SHIFT   shift, and go to state 80
    RIGHT_SHIFT  shift, and go to state 81

    $default  reduce using rule 21 (relational_expression)


State 32

   26 shift_expression: additive_expression .
   30 additive_expression: additive_expression . '+' multiplicative_expression
   31                    | additive_expression . '-' multiplicative_expression

    '+'  shift, and go to state 82
    '-'  shift, and go to state 83

    $default  reduce using rule 26 (shift_expression)


State 33

   29 additive_expression: multiplicative_expression .
   33 multiplicative_expression: multiplicative_expression . '*' cast_expression
   34                          | multiplicative_expression . '/' cast_expression
   35                          | multiplicative_expression . '%' cast_expression

    '*'  shift, and go to state 84
    '/'  shift, and go to state 85
    '%'  shift, and go to state 86

    $default  reduce using rule 29 (additive_expression)


State 34

    5 assignment_expression: unary_expression . assignment_operator assignment_expression
   57 cast_expression: unary_expression .

    RIGHT_SHIFT_ASSIGNMENT  shift, and go to state 87
    LEFT_SHIFT_ASSIGNMENT   shift, and go to state 88
    INCREMENT_ASSIGNMENT    shift, and go to state 89
    DECREMENT_ASSIGNMENT    shift, and go to state 90
    MULTIPLY_ASSIGNMENT     shift, and go to state 91
    DIVIDE_ASSIGNMENT       shift, and go to state 92
    MOD_ASSIGNMENT          shift, and go to state 93
    BITWISE_AND_ASSIGNMENT  shift, and go to state 94
    BITWISE_OR_ASSIGNMENT   shift, and go to state 95
    XOR_ASSIGNMENT          shift, and go to state 96
    '='                     shift, and go to state 97

    $default  reduce using rule 57 (cast_expression)

    assignment_operator  go to state 98


State 35

   50 unary_expression: unary_operator . cast_expression

    ID         shift, and go to state 9
    STRING     shift, and go to state 10
    INCREMENT  shift, and go to state 11
    DECREMENT  shift, and go to state 12
    '&'        shift, and go to state 14
    '+'        shift, and go to state 15
    '-'        shift, and go to state 16
    '*'        shift, and go to state 17
    '~'        shift, and go to state 18
    '!'        shift, and go to state 19
    '('        shift, and go to state 20

    unary_expression    go to state 99
    unary_operator      go to state 35
    cast_expression     go to state 100
    postfix_expression  go to state 37
    primary_expression  go to state 38


State 36

   32 multiplicative_expression: cast_expression .

    $default  reduce using rule 32 (multiplicative_expression)


State 37

   47 unary_expression: postfix_expression .
   60 postfix_expression: postfix_expression . '[' expression ']'
   61                   | postfix_expression . '(' ')'
   62                   | postfix_expression . '(' argument_expression_list ')'
   63                   | postfix_expression . '.' ID
   64                   | postfix_expression . ARROW ID
   65                   | postfix_expression . INCREMENT
   66                   | postfix_expression . DECREMENT

    INCREMENT  shift, and go to state 101
    DECREMENT  shift, and go to state 102
    ARROW      shift, and go to state 103
    '('        shift, and go to state 104
    '['        shift, and go to state 105
    '.'        shift, and go to state 106

    $default  reduce using rule 47 (unary_expression)


State 38

   59 postfix_expression: primary_expression .

    $default  reduce using rule 59 (postfix_expression)


State 39

    0 $accept: jump_statement $end .

    $default  accept


State 40

  158 jump_statement: GOTO ID SEMICOLON .

    $default  reduce using rule 158 (jump_statement)


State 41

   71 primary_expression: '(' . expression ')'

    ID         shift, and go to state 9
    STRING     shift, and go to state 10
    INCREMENT  shift, and go to state 11
    DECREMENT  shift, and go to state 12
    '&'        shift, and go to state 14
    '+'        shift, and go to state 15
    '-'        shift, and go to state 16
    '*'        shift, and go to state 17
    '~'        shift, and go to state 18
    '!'        shift, and go to state 19
    '('        shift, and go to state 20

    expression                 go to state 58
    assignment_expression      go to state 22
    conditional_expression     go to state 23
    logical_or_expression      go to state 24
    logical_and_expression     go to state 25
    inclusive_or_expression    go to state 26
    exclusive_or_expression    go to state 27
    and_expression             go to state 28
    equality_expression        go to state 29
    relational_expression      go to state 30
    shift_expression           go to state 31
    additive_expression        go to state 32
    multiplicative_expression  go to state 33
    unary_expression           go to state 34
    unary_operator             go to state 35
    cast_expression            go to state 36
    postfix_expression         go to state 37
    primary_expression         go to state 38


State 42

   48 unary_expression: INCREMENT unary_expression .

    $default  reduce using rule 48 (unary_expression)


State 43

   49 unary_expression: DECREMENT unary_expression .

    $default  reduce using rule 49 (unary_expression)


State 44

   86 type_specifier: INT .

    $default  reduce using rule 86 (type_specifier)


State 45

   88 type_specifier: FLOAT .

    $default  reduce using rule 88 (type_specifier)


State 46

   84 type_specifier: CHAR .

    $default  reduce using rule 84 (type_specifier)


State 47

  118 type_qualifier: CONST .

    $default  reduce using rule 118 (type_qualifier)


State 48

   89 type_specifier: DOUBLE .

    $default  reduce using rule 89 (type_specifier)


State 49

  111 enum_specifier: ENUM . '{' enumerator_list '}'
  112               | ENUM . ID '{' enumerator_list '}'
  113               | ENUM . ID

    ID   shift, and go to state 107
    '{'  shift, and go to state 108


State 50

   87 type_specifier: LONG .

    $default  reduce using rule 87 (type_specifier)


State 51

   85 type_specifier: SHORT .

    $default  reduce using rule 85 (type_specifier)


State 52

   90 type_specifier: SIGNED .

    $default  reduce using rule 90 (type_specifier)


State 53

   97 struct_or_union: STRUCT .

    $default  reduce using rule 97 (struct_or_union)


State 54

   98 struct_or_union: UNION .

    $default  reduce using rule 98 (struct_or_union)


State 55

   91 type_specifier: UNSIGNED .

    $default  reduce using rule 91 (type_specifier)


State 56

   83 type_specifier: VOID .

    $default  reduce using rule 83 (type_specifier)


State 57

  119 type_qualifier: VOLATILE .

    $default  reduce using rule 119 (type_qualifier)


State 58

    2 expression: expression . ',' assignment_expression
   71 primary_expression: '(' expression . ')'

    ','  shift, and go to state 67
    ')'  shift, and go to state 109


State 59

  102 specifier_qualifier_list: type_specifier . specifier_qualifier_list
  103                         | type_specifier .

    INT       shift, and go to state 44
    FLOAT     shift, and go to state 45
    CHAR      shift, and go to state 46
    CONST     shift, and go to state 47
    DOUBLE    shift, and go to state 48
    ENUM      shift, and go to state 49
    LONG      shift, and go to state 50
    SHORT     shift, and go to state 51
    SIGNED    shift, and go to state 52
    STRUCT    shift, and go to state 53
    UNION     shift, and go to state 54
    UNSIGNED  shift, and go to state 55
    VOID      shift, and go to state 56
    VOLATILE  shift, and go to state 57

    $default  reduce using rule 103 (specifier_qualifier_list)

    type_specifier             go to state 59
    struct_or_union_specifier  go to state 60
    struct_or_union            go to state 61
    specifier_qualifier_list   go to state 110
    enum_specifier             go to state 63
    type_qualifier             go to state 64


State 60

   92 type_specifier: struct_or_union_specifier .

    $default  reduce using rule 92 (type_specifier)


State 61

   94 struct_or_union_specifier: struct_or_union . ID '{' struct_declaration_list '}'
   95                          | struct_or_union . '{' struct_declaration_list '}'
   96                          | struct_or_union . ID

    ID   shift, and go to state 111
    '{'  shift, and go to state 112


State 62

  144 type_name: specifier_qualifier_list .
  145          | specifier_qualifier_list . abstract_declarator

    '*'  shift, and go to state 113
    '('  shift, and go to state 114
    '['  shift, and go to state 115

    $default  reduce using rule 144 (type_name)

    pointer                     go to state 116
    abstract_declarator         go to state 117
    direct_abstract_declarator  go to state 118


State 63

   93 type_specifier: enum_specifier .

    $default  reduce using rule 93 (type_specifier)


State 64

  104 specifier_qualifier_list: type_qualifier . specifier_qualifier_list
  105                         | type_qualifier .

    INT       shift, and go to state 44
    FLOAT     shift, and go to state 45
    CHAR      shift, and go to state 46
    CONST     shift, and go to state 47
    DOUBLE    shift, and go to state 48
    ENUM      shift, and go to state 49
    LONG      shift, and go to state 50
    SHORT     shift, and go to state 51
    SIGNED    shift, and go to state 52
    STRUCT    shift, and go to state 53
    UNION     shift, and go to state 54
    UNSIGNED  shift, and go to state 55
    VOID      shift, and go to state 56
    VOLATILE  shift, and go to state 57

    $default  reduce using rule 105 (specifier_qualifier_list)

    type_specifier             go to state 59
    struct_or_union_specifier  go to state 60
    struct_or_union            go to state 61
    specifier_qualifier_list   go to state 119
    enum_specifier             go to state 63
    type_qualifier             go to state 64


State 65

   58 cast_expression: '(' type_name . ')' cast_expression

    ')'  shift, and go to state 120


State 66

  162 jump_statement: RETURN expression SEMICOLON .

    $default  reduce using rule 162 (jump_statement)


State 67

    2 expression: expression ',' . assignment_expression

    ID         shift, and go to state 9
    STRING     shift, and go to state 10
    INCREMENT  shift, and go to state 11
    DECREMENT  shift, and go to state 12
    '&'        shift, and go to state 14
    '+'        shift, and go to state 15
    '-'        shift, and go to state 16
    '*'        shift, and go to state 17
    '~'        shift, and go to state 18
    '!'        shift, and go to state 19
    '('        shift, and go to state 20

    assignment_expression      go to state 121
    conditional_expression     go to state 23
    logical_or_expression      go to state 24
    logical_and_expression     go to state 25
    inclusive_or_expression    go to state 26
    exclusive_or_expression    go to state 27
    and_expression             go to state 28
    equality_expression        go to state 29
    relational_expression      go to state 30
    shift_expression           go to state 31
    additive_expression        go to state 32
    multiplicative_expression  go to state 33
    unary_expression           go to state 34
    unary_operator             go to state 35
    cast_expression            go to state 36
    postfix_expression         go to state 37
    primary_expression         go to state 38


State 68

    9 logical_or_expression: logical_or_expression LOGICAL_OR . logical_and_expression

    ID         shift, and go to state 9
    STRING     shift, and go to state 10
    INCREMENT  shift, and go to state 11
    DECREMENT  shift, and go to state 12
    '&'        shift, and go to state 14
    '+'        shift, and go to state 15
    '-'        shift, and go to state 16
    '*'        shift, and go to state 17
    '~'        shift, and go to state 18
    '!'        shift, and go to state 19
    '('        shift, and go to state 20

    logical_and_expression     go to state 122
    inclusive_or_expression    go to state 26
    exclusive_or_expression    go to state 27
    and_expression             go to state 28
    equality_expression        go to state 29
    relational_expression      go to state 30
    shift_expression           go to state 31
    additive_expression        go to state 32
    multiplicative_expression  go to state 33
    unary_expression           go to state 99
    unary_operator             go to state 35
    cast_expression            go to state 36
    postfix_expression         go to state 37
    primary_expression         go to state 38


State 69

    7 conditional_expression: logical_or_expression '?' . expression ':' conditional_expression

    ID         shift, and go to state 9
    STRING     shift, and go to state 10
    INCREMENT  shift, and go to state 11
    DECREMENT  shift, and go to state 12
    '&'        shift, and go to state 14
    '+'        shift, and go to state 15
    '-'        shift, and go to state 16
    '*'        shift, and go to state 17
    '~'        shift, and go to state 18
    '!'        shift, and go to state 19
    '('        shift, and go to state 20

    expression                 go to state 123
    assignment_expression      go to state 22
    conditional_expression     go to state 23
    logical_or_expression      go to state 24
    logical_and_expression     go to state 25
    inclusive_or_expression    go to state 26
    exclusive_or_expression    go to state 27
    and_expression             go to state 28
    equality_expression        go to state 29
    relational_expression      go to state 30
    shift_expression           go to state 31
    additive_expression        go to state 32
    multiplicative_expression  go to state 33
    unary_expression           go to state 34
    unary_operator             go to state 35
    cast_expression            go to state 36
    postfix_expression         go to state 37
    primary_expression         go to state 38


State 70

   11 logical_and_expression: logical_and_expression LOGICAL_AND . inclusive_or_expression

    ID         shift, and go to state 9
    STRING     shift, and go to state 10
    INCREMENT  shift, and go to state 11
    DECREMENT  shift, and go to state 12
    '&'        shift, and go to state 14
    '+'        shift, and go to state 15
    '-'        shift, and go to state 16
    '*'        shift, and go to state 17
    '~'        shift, and go to state 18
    '!'        shift, and go to state 19
    '('        shift, and go to state 20

    inclusive_or_expression    go to state 124
    exclusive_or_expression    go to state 27
    and_expression             go to state 28
    equality_expression        go to state 29
    relational_expression      go to state 30
    shift_expression           go to state 31
    additive_expression        go to state 32
    multiplicative_expression  go to state 33
    unary_expression           go to state 99
    unary_operator             go to state 35
    cast_expression            go to state 36
    postfix_expression         go to state 37
    primary_expression         go to state 38


State 71

   13 inclusive_or_expression: inclusive_or_expression '|' . exclusive_or_expression

    ID         shift, and go to state 9
    STRING     shift, and go to state 10
    INCREMENT  shift, and go to state 11
    DECREMENT  shift, and go to state 12
    '&'        shift, and go to state 14
    '+'        shift, and go to state 15
    '-'        shift, and go to state 16
    '*'        shift, and go to state 17
    '~'        shift, and go to state 18
    '!'        shift, and go to state 19
    '('        shift, and go to state 20

    exclusive_or_expression    go to state 125
    and_expression             go to state 28
    equality_expression        go to state 29
    relational_expression      go to state 30
    shift_expression           go to state 31
    additive_expression        go to state 32
    multiplicative_expression  go to state 33
    unary_expression           go to state 99
    unary_operator             go to state 35
    cast_expression            go to state 36
    postfix_expression         go to state 37
    primary_expression         go to state 38


State 72

   15 exclusive_or_expression: exclusive_or_expression '^' . and_expression

    ID         shift, and go to state 9
    STRING     shift, and go to state 10
    INCREMENT  shift, and go to state 11
    DECREMENT  shift, and go to state 12
    '&'        shift, and go to state 14
    '+'        shift, and go to state 15
    '-'        shift, and go to state 16
    '*'        shift, and go to state 17
    '~'        shift, and go to state 18
    '!'        shift, and go to state 19
    '('        shift, and go to state 20

    and_expression             go to state 126
    equality_expression        go to state 29
    relational_expression      go to state 30
    shift_expression           go to state 31
    additive_expression        go to state 32
    multiplicative_expression  go to state 33
    unary_expression           go to state 99
    unary_operator             go to state 35
    cast_expression            go to state 36
    postfix_expression         go to state 37
    primary_expression         go to state 38


State 73

   17 and_expression: and_expression '&' . equality_expression

    ID         shift, and go to state 9
    STRING     shift, and go to state 10
    INCREMENT  shift, and go to state 11
    DECREMENT  shift, and go to state 12
    '&'        shift, and go to state 14
    '+'        shift, and go to state 15
    '-'        shift, and go to state 16
    '*'        shift, and go to state 17
    '~'        shift, and go to state 18
    '!'        shift, and go to state 19
    '('        shift, and go to state 20

    equality_expression        go to state 127
    relational_expression      go to state 30
    shift_expression           go to state 31
    additive_expression        go to state 32
    multiplicative_expression  go to state 33
    unary_expression           go to state 99
    unary_operator             go to state 35
    cast_expression            go to state 36
    postfix_expression         go to state 37
    primary_expression         go to state 38


State 74

   19 equality_expression: equality_expression EQUAL . relational_expression

    ID         shift, and go to state 9
    STRING     shift, and go to state 10
    INCREMENT  shift, and go to state 11
    DECREMENT  shift, and go to state 12
    '&'        shift, and go to state 14
    '+'        shift, and go to state 15
    '-'        shift, and go to state 16
    '*'        shift, and go to state 17
    '~'        shift, and go to state 18
    '!'        shift, and go to state 19
    '('        shift, and go to state 20

    relational_expression      go to state 128
    shift_expression           go to state 31
    additive_expression        go to state 32
    multiplicative_expression  go to state 33
    unary_expression           go to state 99
    unary_operator             go to state 35
    cast_expression            go to state 36
    postfix_expression         go to state 37
    primary_expression         go to state 38


State 75

   20 equality_expression: equality_expression NOT_EQUAL . relational_expression

    ID         shift, and go to state 9
    STRING     shift, and go to state 10
    INCREMENT  shift, and go to state 11
    DECREMENT  shift, and go to state 12
    '&'        shift, and go to state 14
    '+'        shift, and go to state 15
    '-'        shift, and go to state 16
    '*'        shift, and go to state 17
    '~'        shift, and go to state 18
    '!'        shift, and go to state 19
    '('        shift, and go to state 20

    relational_expression      go to state 129
    shift_expression           go to state 31
    additive_expression        go to state 32
    multiplicative_expression  go to state 33
    unary_expression           go to state 99
    unary_operator             go to state 35
    cast_expression            go to state 36
    postfix_expression         go to state 37
    primary_expression         go to state 38


State 76

   24 relational_expression: relational_expression LESS_EQUAL . shift_expression

    ID         shift, and go to state 9
    STRING     shift, and go to state 10
    INCREMENT  shift, and go to state 11
    DECREMENT  shift, and go to state 12
    '&'        shift, and go to state 14
    '+'        shift, and go to state 15
    '-'        shift, and go to state 16
    '*'        shift, and go to state 17
    '~'        shift, and go to state 18
    '!'        shift, and go to state 19
    '('        shift, and go to state 20

    shift_expression           go to state 130
    additive_expression        go to state 32
    multiplicative_expression  go to state 33
    unary_expression           go to state 99
    unary_operator             go to state 35
    cast_expression            go to state 36
    postfix_expression         go to state 37
    primary_expression         go to state 38


State 77

   25 relational_expression: relational_expression GREATER_EQUAL . shift_expression

    ID         shift, and go to state 9
    STRING     shift, and go to state 10
    INCREMENT  shift, and go to state 11
    DECREMENT  shift, and go to state 12
    '&'        shift, and go to state 14
    '+'        shift, and go to state 15
    '-'        shift, and go to state 16
    '*'        shift, and go to state 17
    '~'        shift, and go to state 18
    '!'        shift, and go to state 19
    '('        shift, and go to state 20

    shift_expression           go to state 131
    additive_expression        go to state 32
    multiplicative_expression  go to state 33
    unary_expression           go to state 99
    unary_operator             go to state 35
    cast_expression            go to state 36
    postfix_expression         go to state 37
    primary_expression         go to state 38


State 78

   22 relational_expression: relational_expression '<' . shift_expression

    ID         shift, and go to state 9
    STRING     shift, and go to state 10
    INCREMENT  shift, and go to state 11
    DECREMENT  shift, and go to state 12
    '&'        shift, and go to state 14
    '+'        shift, and go to state 15
    '-'        shift, and go to state 16
    '*'        shift, and go to state 17
    '~'        shift, and go to state 18
    '!'        shift, and go to state 19
    '('        shift, and go to state 20

    shift_expression           go to state 132
    additive_expression        go to state 32
    multiplicative_expression  go to state 33
    unary_expression           go to state 99
    unary_operator             go to state 35
    cast_expression            go to state 36
    postfix_expression         go to state 37
    primary_expression         go to state 38


State 79

   23 relational_expression: relational_expression '>' . shift_expression

    ID         shift, and go to state 9
    STRING     shift, and go to state 10
    INCREMENT  shift, and go to state 11
    DECREMENT  shift, and go to state 12
    '&'        shift, and go to state 14
    '+'        shift, and go to state 15
    '-'        shift, and go to state 16
    '*'        shift, and go to state 17
    '~'        shift, and go to state 18
    '!'        shift, and go to state 19
    '('        shift, and go to state 20

    shift_expression           go to state 133
    additive_expression        go to state 32
    multiplicative_expression  go to state 33
    unary_expression           go to state 99
    unary_operator             go to state 35
    cast_expression            go to state 36
    postfix_expression         go to state 37
    primary_expression         go to state 38


State 80

   27 shift_expression: shift_expression LEFT_SHIFT . additive_expression

    ID         shift, and go to state 9
    STRING     shift, and go to state 10
    INCREMENT  shift, and go to state 11
    DECREMENT  shift, and go to state 12
    '&'        shift, and go to state 14
    '+'        shift, and go to state 15
    '-'        shift, and go to state 16
    '*'        shift, and go to state 17
    '~'        shift, and go to state 18
    '!'        shift, and go to state 19
    '('        shift, and go to state 20

    additive_expression        go to state 134
    multiplicative_expression  go to state 33
    unary_expression           go to state 99
    unary_operator             go to state 35
    cast_expression            go to state 36
    postfix_expression         go to state 37
    primary_expression         go to state 38


State 81

   28 shift_expression: shift_expression RIGHT_SHIFT . additive_expression

    ID         shift, and go to state 9
    STRING     shift, and go to state 10
    INCREMENT  shift, and go to state 11
    DECREMENT  shift, and go to state 12
    '&'        shift, and go to state 14
    '+'        shift, and go to state 15
    '-'        shift, and go to state 16
    '*'        shift, and go to state 17
    '~'        shift, and go to state 18
    '!'        shift, and go to state 19
    '('        shift, and go to state 20

    additive_expression        go to state 135
    multiplicative_expression  go to state 33
    unary_expression           go to state 99
    unary_operator             go to state 35
    cast_expression            go to state 36
    postfix_expression         go to state 37
    primary_expression         go to state 38


State 82

   30 additive_expression: additive_expression '+' . multiplicative_expression

    ID         shift, and go to state 9
    STRING     shift, and go to state 10
    INCREMENT  shift, and go to state 11
    DECREMENT  shift, and go to state 12
    '&'        shift, and go to state 14
    '+'        shift, and go to state 15
    '-'        shift, and go to state 16
    '*'        shift, and go to state 17
    '~'        shift, and go to state 18
    '!'        shift, and go to state 19
    '('        shift, and go to state 20

    multiplicative_expression  go to state 136
    unary_expression           go to state 99
    unary_operator             go to state 35
    cast_expression            go to state 36
    postfix_expression         go to state 37
    primary_expression         go to state 38


State 83

   31 additive_expression: additive_expression '-' . multiplicative_expression

    ID         shift, and go to state 9
    STRING     shift, and go to state 10
    INCREMENT  shift, and go to state 11
    DECREMENT  shift, and go to state 12
    '&'        shift, and go to state 14
    '+'        shift, and go to state 15
    '-'        shift, and go to state 16
    '*'        shift, and go to state 17
    '~'        shift, and go to state 18
    '!'        shift, and go to state 19
    '('        shift, and go to state 20

    multiplicative_expression  go to state 137
    unary_expression           go to state 99
    unary_operator             go to state 35
    cast_expression            go to state 36
    postfix_expression         go to state 37
    primary_expression         go to state 38


State 84

   33 multiplicative_expression: multiplicative_expression '*' . cast_expression

    ID         shift, and go to state 9
    STRING     shift, and go to state 10
    INCREMENT  shift, and go to state 11
    DECREMENT  shift, and go to state 12
    '&'        shift, and go to state 14
    '+'        shift, and go to state 15
    '-'        shift, and go to state 16
    '*'        shift, and go to state 17
    '~'        shift, and go to state 18
    '!'        shift, and go to state 19
    '('        shift, and go to state 20

    unary_expression    go to state 99
    unary_operator      go to state 35
    cast_expression     go to state 138
    postfix_expression  go to state 37
    primary_expression  go to state 38


State 85

   34 multiplicative_expression: multiplicative_expression '/' . cast_expression

    ID         shift, and go to state 9
    STRING     shift, and go to state 10
    INCREMENT  shift, and go to state 11
    DECREMENT  shift, and go to state 12
    '&'        shift, and go to state 14
    '+'        shift, and go to state 15
    '-'        shift, and go to state 16
    '*'        shift, and go to state 17
    '~'        shift, and go to state 18
    '!'        shift, and go to state 19
    '('        shift, and go to state 20

    unary_expression    go to state 99
    unary_operator      go to state 35
    cast_expression     go to state 139
    postfix_expression  go to state 37
    primary_expression  go to state 38


State 86

   35 multiplicative_expression: multiplicative_expression '%' . cast_expression

    ID         shift, and go to state 9
    STRING     shift, and go to state 10
    INCREMENT  shift, and go to state 11
    DECREMENT  shift, and go to state 12
    '&'        shift, and go to state 14
    '+'        shift, and go to state 15
    '-'        shift, and go to state 16
    '*'        shift, and go to state 17
    '~'        shift, and go to state 18
    '!'        shift, and go to state 19
    '('        shift, and go to state 20

    unary_expression    go to state 99
    unary_operator      go to state 35
    cast_expression     go to state 140
    postfix_expression  go to state 37
    primary_expression  go to state 38


State 87

   43 assignment_operator: RIGHT_SHIFT_ASSIGNMENT .

    $default  reduce using rule 43 (assignment_operator)


State 88

   42 assignment_operator: LEFT_SHIFT_ASSIGNMENT .

    $default  reduce using rule 42 (assignment_operator)


State 89

   40 assignment_operator: INCREMENT_ASSIGNMENT .

    $default  reduce using rule 40 (assignment_operator)


State 90

   41 assignment_operator: DECREMENT_ASSIGNMENT .

    $default  reduce using rule 41 (assignment_operator)


State 91

   37 assignment_operator: MULTIPLY_ASSIGNMENT .

    $default  reduce using rule 37 (assignment_operator)


State 92

   38 assignment_operator: DIVIDE_ASSIGNMENT .

    $default  reduce using rule 38 (assignment_operator)


State 93

   39 assignment_operator: MOD_ASSIGNMENT .

    $default  reduce using rule 39 (assignment_operator)


State 94

   44 assignment_operator: BITWISE_AND_ASSIGNMENT .

    $default  reduce using rule 44 (assignment_operator)


State 95

   46 assignment_operator: BITWISE_OR_ASSIGNMENT .

    $default  reduce using rule 46 (assignment_operator)


State 96

   45 assignment_operator: XOR_ASSIGNMENT .

    $default  reduce using rule 45 (assignment_operator)


State 97

   36 assignment_operator: '=' .

    $default  reduce using rule 36 (assignment_operator)


State 98

    5 assignment_expression: unary_expression assignment_operator . assignment_expression

    ID         shift, and go to state 9
    STRING     shift, and go to state 10
    INCREMENT  shift, and go to state 11
    DECREMENT  shift, and go to state 12
    '&'        shift, and go to state 14
    '+'        shift, and go to state 15
    '-'        shift, and go to state 16
    '*'        shift, and go to state 17
    '~'        shift, and go to state 18
    '!'        shift, and go to state 19
    '('        shift, and go to state 20

    assignment_expression      go to state 141
    conditional_expression     go to state 23
    logical_or_expression      go to state 24
    logical_and_expression     go to state 25
    inclusive_or_expression    go to state 26
    exclusive_or_expression    go to state 27
    and_expression             go to state 28
    equality_expression        go to state 29
    relational_expression      go to state 30
    shift_expression           go to state 31
    additive_expression        go to state 32
    multiplicative_expression  go to state 33
    unary_expression           go to state 34
    unary_operator             go to state 35
    cast_expression            go to state 36
    postfix_expression         go to state 37
    primary_expression         go to state 38


State 99

   57 cast_expression: unary_expression .

    $default  reduce using rule 57 (cast_expression)


State 100

   50 unary_expression: unary_operator cast_expression .

    $default  reduce using rule 50 (unary_expression)


State 101

   65 postfix_expression: postfix_expression INCREMENT .

    $default  reduce using rule 65 (postfix_expression)


State 102

   66 postfix_expression: postfix_expression DECREMENT .

    $default  reduce using rule 66 (postfix_expression)


State 103

   64 postfix_expression: postfix_expression ARROW . ID

    ID  shift, and go to state 142


State 104

   61 postfix_expression: postfix_expression '(' . ')'
   62                   | postfix_expression '(' . argument_expression_list ')'

    ID         shift, and go to state 9
    STRING     shift, and go to state 10
    INCREMENT  shift, and go to state 11
    DECREMENT  shift, and go to state 12
    '&'        shift, and go to state 14
    '+'        shift, and go to state 15
    '-'        shift, and go to state 16
    '*'        shift, and go to state 17
    '~'        shift, and go to state 18
    '!'        shift, and go to state 19
    '('        shift, and go to state 20
    ')'        shift, and go to state 143

    assignment_expression      go to state 144
    conditional_expression     go to state 23
    logical_or_expression      go to state 24
    logical_and_expression     go to state 25
    inclusive_or_expression    go to state 26
    exclusive_or_expression    go to state 27
    and_expression             go to state 28
    equality_expression        go to state 29
    relational_expression      go to state 30
    shift_expression           go to state 31
    additive_expression        go to state 32
    multiplicative_expression  go to state 33
    unary_expression           go to state 34
    unary_operator             go to state 35
    cast_expression            go to state 36
    postfix_expression         go to state 37
    argument_expression_list   go to state 145
    primary_expression         go to state 38


State 105

   60 postfix_expression: postfix_expression '[' . expression ']'

    ID         shift, and go to state 9
    STRING     shift, and go to state 10
    INCREMENT  shift, and go to state 11
    DECREMENT  shift, and go to state 12
    '&'        shift, and go to state 14
    '+'        shift, and go to state 15
    '-'        shift, and go to state 16
    '*'        shift, and go to state 17
    '~'        shift, and go to state 18
    '!'        shift, and go to state 19
    '('        shift, and go to state 20

    expression                 go to state 146
    assignment_expression      go to state 22
    conditional_expression     go to state 23
    logical_or_expression      go to state 24
    logical_and_expression     go to state 25
    inclusive_or_expression    go to state 26
    exclusive_or_expression    go to state 27
    and_expression             go to state 28
    equality_expression        go to state 29
    relational_expression      go to state 30
    shift_expression           go to state 31
    additive_expression        go to state 32
    multiplicative_expression  go to state 33
    unary_expression           go to state 34
    unary_operator             go to state 35
    cast_expression            go to state 36
    postfix_expression         go to state 37
    primary_expression         go to state 38


State 106

   63 postfix_expression: postfix_expression '.' . ID

    ID  shift, and go to state 147


State 107

  112 enum_specifier: ENUM ID . '{' enumerator_list '}'
  113               | ENUM ID .

    '{'  shift, and go to state 148

    $default  reduce using rule 113 (enum_specifier)


State 108

  111 enum_specifier: ENUM '{' . enumerator_list '}'

    ID  shift, and go to state 149

    enumerator_list  go to state 150
    enumerator       go to state 151


State 109

   71 primary_expression: '(' expression ')' .

    $default  reduce using rule 71 (primary_expression)


State 110

  102 specifier_qualifier_list: type_specifier specifier_qualifier_list .

    $default  reduce using rule 102 (specifier_qualifier_list)


State 111

   94 struct_or_union_specifier: struct_or_union ID . '{' struct_declaration_list '}'
   96                          | struct_or_union ID .

    '{'  shift, and go to state 152

    $default  reduce using rule 96 (struct_or_union_specifier)


State 112

   95 struct_or_union_specifier: struct_or_union '{' . struct_declaration_list '}'

    INT       shift, and go to state 44
    FLOAT     shift, and go to state 45
    CHAR      shift, and go to state 46
    CONST     shift, and go to state 47
    DOUBLE    shift, and go to state 48
    ENUM      shift, and go to state 49
    LONG      shift, and go to state 50
    SHORT     shift, and go to state 51
    SIGNED    shift, and go to state 52
    STRUCT    shift, and go to state 53
    UNION     shift, and go to state 54
    UNSIGNED  shift, and go to state 55
    VOID      shift, and go to state 56
    VOLATILE  shift, and go to state 57

    type_specifier             go to state 59
    struct_or_union_specifier  go to state 60
    struct_or_union            go to state 61
    struct_declaration_list    go to state 153
    struct_declaration         go to state 154
    specifier_qualifier_list   go to state 155
    enum_specifier             go to state 63
    type_qualifier             go to state 64


State 113

  129 pointer: '*' .
  130        | '*' . type_qualifier_list
  131        | '*' . pointer
  132        | '*' . type_qualifier_list pointer

    CONST     shift, and go to state 47
    VOLATILE  shift, and go to state 57
    '*'       shift, and go to state 113

    $default  reduce using rule 129 (pointer)

    type_qualifier       go to state 156
    pointer              go to state 157
    type_qualifier_list  go to state 158


State 114

  149 direct_abstract_declarator: '(' . abstract_declarator ')'
  154                           | '(' . ')'
  155                           | '(' . parameter_type_list ')'

    INT       shift, and go to state 44
    FLOAT     shift, and go to state 45
    CHAR      shift, and go to state 46
    AUTO      shift, and go to state 159
    CONST     shift, and go to state 47
    DOUBLE    shift, and go to state 48
    ENUM      shift, and go to state 49
    EXTERN    shift, and go to state 160
    LONG      shift, and go to state 50
    REGISTER  shift, and go to state 161
    SHORT     shift, and go to state 51
    SIGNED    shift, and go to state 52
    STATIC    shift, and go to state 162
    STRUCT    shift, and go to state 53
    TYPEDEF   shift, and go to state 163
    UNION     shift, and go to state 54
    UNSIGNED  shift, and go to state 55
    VOID      shift, and go to state 56
    VOLATILE  shift, and go to state 57
    '*'       shift, and go to state 113
    '('       shift, and go to state 114
    ')'       shift, and go to state 164
    '['       shift, and go to state 115

    declaration_specifiers      go to state 165
    storage_class_specifier     go to state 166
    type_specifier              go to state 167
    struct_or_union_specifier   go to state 60
    struct_or_union             go to state 61
    enum_specifier              go to state 63
    type_qualifier              go to state 168
    pointer                     go to state 116
    parameter_type_list         go to state 169
    parameter_list              go to state 170
    parameter_declaration       go to state 171
    abstract_declarator         go to state 172
    direct_abstract_declarator  go to state 118


State 115

  150 direct_abstract_declarator: '[' . ']'
  151                           | '[' . constant_expression ']'

    ID         shift, and go to state 9
    STRING     shift, and go to state 10
    INCREMENT  shift, and go to state 11
    DECREMENT  shift, and go to state 12
    '&'        shift, and go to state 14
    '+'        shift, and go to state 15
    '-'        shift, and go to state 16
    '*'        shift, and go to state 17
    '~'        shift, and go to state 18
    '!'        shift, and go to state 19
    '('        shift, and go to state 20
    ']'        shift, and go to state 173

    constant_expression        go to state 174
    conditional_expression     go to state 175
    logical_or_expression      go to state 24
    logical_and_expression     go to state 25
    inclusive_or_expression    go to state 26
    exclusive_or_expression    go to state 27
    and_expression             go to state 28
    equality_expression        go to state 29
    relational_expression      go to state 30
    shift_expression           go to state 31
    additive_expression        go to state 32
    multiplicative_expression  go to state 33
    unary_expression           go to state 99
    unary_operator             go to state 35
    cast_expression            go to state 36
    postfix_expression         go to state 37
    primary_expression         go to state 38


State 116

  146 abstract_declarator: pointer .
  148                    | pointer . direct_abstract_declarator

    '('  shift, and go to state 114
    '['  shift, and go to state 115

    $default  reduce using rule 146 (abstract_declarator)

    direct_abstract_declarator  go to state 176


State 117

  145 type_name: specifier_qualifier_list abstract_declarator .

    $default  reduce using rule 145 (type_name)


State 118

  147 abstract_declarator: direct_abstract_declarator .
  152 direct_abstract_declarator: direct_abstract_declarator . '[' ']'
  153                           | direct_abstract_declarator . '[' constant_expression ']'
  156                           | direct_abstract_declarator . '(' ')'
  157                           | direct_abstract_declarator . '(' parameter_type_list ')'

    '('  shift, and go to state 177
    '['  shift, and go to state 178

    $default  reduce using rule 147 (abstract_declarator)


State 119

  104 specifier_qualifier_list: type_qualifier specifier_qualifier_list .

    $default  reduce using rule 104 (specifier_qualifier_list)


State 120

   58 cast_expression: '(' type_name ')' . cast_expression

    ID         shift, and go to state 9
    STRING     shift, and go to state 10
    INCREMENT  shift, and go to state 11
    DECREMENT  shift, and go to state 12
    '&'        shift, and go to state 14
    '+'        shift, and go to state 15
    '-'        shift, and go to state 16
    '*'        shift, and go to state 17
    '~'        shift, and go to state 18
    '!'        shift, and go to state 19
    '('        shift, and go to state 20

    unary_expression    go to state 99
    unary_operator      go to state 35
    cast_expression     go to state 179
    postfix_expression  go to state 37
    primary_expression  go to state 38


State 121

    2 expression: expression ',' assignment_expression .

    $default  reduce using rule 2 (expression)


State 122

    9 logical_or_expression: logical_or_expression LOGICAL_OR logical_and_expression .
   11 logical_and_expression: logical_and_expression . LOGICAL_AND inclusive_or_expression

    LOGICAL_AND  shift, and go to state 70

    $default  reduce using rule 9 (logical_or_expression)


State 123

    2 expression: expression . ',' assignment_expression
    7 conditional_expression: logical_or_expression '?' expression . ':' conditional_expression

    ','  shift, and go to state 67
    ':'  shift, and go to state 180


State 124

   11 logical_and_expression: logical_and_expression LOGICAL_AND inclusive_or_expression .
   13 inclusive_or_expression: inclusive_or_expression . '|' exclusive_or_expression

    '|'  shift, and go to state 71

    $default  reduce using rule 11 (logical_and_expression)


State 125

   13 inclusive_or_expression: inclusive_or_expression '|' exclusive_or_expression .
   15 exclusive_or_expression: exclusive_or_expression . '^' and_expression

    '^'  shift, and go to state 72

    $default  reduce using rule 13 (inclusive_or_expression)


State 126

   15 exclusive_or_expression: exclusive_or_expression '^' and_expression .
   17 and_expression: and_expression . '&' equality_expression

    '&'  shift, and go to state 73

    $default  reduce using rule 15 (exclusive_or_expression)


State 127

   17 and_expression: and_expression '&' equality_expression .
   19 equality_expression: equality_expression . EQUAL relational_expression
   20                    | equality_expression . NOT_EQUAL relational_expression

    EQUAL      shift, and go to state 74
    NOT_EQUAL  shift, and go to state 75

    $default  reduce using rule 17 (and_expression)


State 128

   19 equality_expression: equality_expression EQUAL relational_expression .
   22 relational_expression: relational_expression . '<' shift_expression
   23                      | relational_expression . '>' shift_expression
   24                      | relational_expression . LESS_EQUAL shift_expression
   25                      | relational_expression . GREATER_EQUAL shift_expression

    LESS_EQUAL     shift, and go to state 76
    GREATER_EQUAL  shift, and go to state 77
    '<'            shift, and go to state 78
    '>'            shift, and go to state 79

    $default  reduce using rule 19 (equality_expression)


State 129

   20 equality_expression: equality_expression NOT_EQUAL relational_expression .
   22 relational_expression: relational_expression . '<' shift_expression
   23                      | relational_expression . '>' shift_expression
   24                      | relational_expression . LESS_EQUAL shift_expression
   25                      | relational_expression . GREATER_EQUAL shift_expression

    LESS_EQUAL     shift, and go to state 76
    GREATER_EQUAL  shift, and go to state 77
    '<'            shift, and go to state 78
    '>'            shift, and go to state 79

    $default  reduce using rule 20 (equality_expression)


State 130

   24 relational_expression: relational_expression LESS_EQUAL shift_expression .
   27 shift_expression: shift_expression . LEFT_SHIFT additive_expression
   28                 | shift_expression . RIGHT_SHIFT additive_expression

    LEFT_SHIFT   shift, and go to state 80
    RIGHT_SHIFT  shift, and go to state 81

    $default  reduce using rule 24 (relational_expression)


State 131

   25 relational_expression: relational_expression GREATER_EQUAL shift_expression .
   27 shift_expression: shift_expression . LEFT_SHIFT additive_expression
   28                 | shift_expression . RIGHT_SHIFT additive_expression

    LEFT_SHIFT   shift, and go to state 80
    RIGHT_SHIFT  shift, and go to state 81

    $default  reduce using rule 25 (relational_expression)


State 132

   22 relational_expression: relational_expression '<' shift_expression .
   27 shift_expression: shift_expression . LEFT_SHIFT additive_expression
   28                 | shift_expression . RIGHT_SHIFT additive_expression

    LEFT_SHIFT   shift, and go to state 80
    RIGHT_SHIFT  shift, and go to state 81

    $default  reduce using rule 22 (relational_expression)


State 133

   23 relational_expression: relational_expression '>' shift_expression .
   27 shift_expression: shift_expression . LEFT_SHIFT additive_expression
   28                 | shift_expression . RIGHT_SHIFT additive_expression

    LEFT_SHIFT   shift, and go to state 80
    RIGHT_SHIFT  shift, and go to state 81

    $default  reduce using rule 23 (relational_expression)


State 134

   27 shift_expression: shift_expression LEFT_SHIFT additive_expression .
   30 additive_expression: additive_expression . '+' multiplicative_expression
   31                    | additive_expression . '-' multiplicative_expression

    '+'  shift, and go to state 82
    '-'  shift, and go to state 83

    $default  reduce using rule 27 (shift_expression)


State 135

   28 shift_expression: shift_expression RIGHT_SHIFT additive_expression .
   30 additive_expression: additive_expression . '+' multiplicative_expression
   31                    | additive_expression . '-' multiplicative_expression

    '+'  shift, and go to state 82
    '-'  shift, and go to state 83

    $default  reduce using rule 28 (shift_expression)


State 136

   30 additive_expression: additive_expression '+' multiplicative_expression .
   33 multiplicative_expression: multiplicative_expression . '*' cast_expression
   34                          | multiplicative_expression . '/' cast_expression
   35                          | multiplicative_expression . '%' cast_expression

    '*'  shift, and go to state 84
    '/'  shift, and go to state 85
    '%'  shift, and go to state 86

    $default  reduce using rule 30 (additive_expression)


State 137

   31 additive_expression: additive_expression '-' multiplicative_expression .
   33 multiplicative_expression: multiplicative_expression . '*' cast_expression
   34                          | multiplicative_expression . '/' cast_expression
   35                          | multiplicative_expression . '%' cast_expression

    '*'  shift, and go to state 84
    '/'  shift, and go to state 85
    '%'  shift, and go to state 86

    $default  reduce using rule 31 (additive_expression)


State 138

   33 multiplicative_expression: multiplicative_expression '*' cast_expression .

    $default  reduce using rule 33 (multiplicative_expression)


State 139

   34 multiplicative_expression: multiplicative_expression '/' cast_expression .

    $default  reduce using rule 34 (multiplicative_expression)


State 140

   35 multiplicative_expression: multiplicative_expression '%' cast_expression .

    $default  reduce using rule 35 (multiplicative_expression)


State 141

    5 assignment_expression: unary_expression assignment_operator assignment_expression .

    $default  reduce using rule 5 (assignment_expression)


State 142

   64 postfix_expression: postfix_expression ARROW ID .

    $default  reduce using rule 64 (postfix_expression)


State 143

   61 postfix_expression: postfix_expression '(' ')' .

    $default  reduce using rule 61 (postfix_expression)


State 144

   67 argument_expression_list: assignment_expression .

    $default  reduce using rule 67 (argument_expression_list)


State 145

   62 postfix_expression: postfix_expression '(' argument_expression_list . ')'
   68 argument_expression_list: argument_expression_list . ',' assignment_expression

    ','  shift, and go to state 181
    ')'  shift, and go to state 182


State 146

    2 expression: expression . ',' assignment_expression
   60 postfix_expression: postfix_expression '[' expression . ']'

    ','  shift, and go to state 67
    ']'  shift, and go to state 183


State 147

   63 postfix_expression: postfix_expression '.' ID .

    $default  reduce using rule 63 (postfix_expression)


State 148

  112 enum_specifier: ENUM ID '{' . enumerator_list '}'

    ID  shift, and go to state 149

    enumerator_list  go to state 184
    enumerator       go to state 151


State 149

  116 enumerator: ID .
  117           | ID . '=' constant_expression

    '='  shift, and go to state 185

    $default  reduce using rule 116 (enumerator)


State 150

  111 enum_specifier: ENUM '{' enumerator_list . '}'
  115 enumerator_list: enumerator_list . ',' enumerator

    ','  shift, and go to state 186
    '}'  shift, and go to state 187


State 151

  114 enumerator_list: enumerator .

    $default  reduce using rule 114 (enumerator_list)


State 152

   94 struct_or_union_specifier: struct_or_union ID '{' . struct_declaration_list '}'

    INT       shift, and go to state 44
    FLOAT     shift, and go to state 45
    CHAR      shift, and go to state 46
    CONST     shift, and go to state 47
    DOUBLE    shift, and go to state 48
    ENUM      shift, and go to state 49
    LONG      shift, and go to state 50
    SHORT     shift, and go to state 51
    SIGNED    shift, and go to state 52
    STRUCT    shift, and go to state 53
    UNION     shift, and go to state 54
    UNSIGNED  shift, and go to state 55
    VOID      shift, and go to state 56
    VOLATILE  shift, and go to state 57

    type_specifier             go to state 59
    struct_or_union_specifier  go to state 60
    struct_or_union            go to state 61
    struct_declaration_list    go to state 188
    struct_declaration         go to state 154
    specifier_qualifier_list   go to state 155
    enum_specifier             go to state 63
    type_qualifier             go to state 64


State 153

   95 struct_or_union_specifier: struct_or_union '{' struct_declaration_list . '}'
  100 struct_declaration_list: struct_declaration_list . struct_declaration

    INT       shift, and go to state 44
    FLOAT     shift, and go to state 45
    CHAR      shift, and go to state 46
    CONST     shift, and go to state 47
    DOUBLE    shift, and go to state 48
    ENUM      shift, and go to state 49
    LONG      shift, and go to state 50
    SHORT     shift, and go to state 51
    SIGNED    shift, and go to state 52
    STRUCT    shift, and go to state 53
    UNION     shift, and go to state 54
    UNSIGNED  shift, and go to state 55
    VOID      shift, and go to state 56
    VOLATILE  shift, and go to state 57
    '}'       shift, and go to state 189

    type_specifier             go to state 59
    struct_or_union_specifier  go to state 60
    struct_or_union            go to state 61
    struct_declaration         go to state 190
    specifier_qualifier_list   go to state 155
    enum_specifier             go to state 63
    type_qualifier             go to state 64


State 154

   99 struct_declaration_list: struct_declaration .

    $default  reduce using rule 99 (struct_declaration_list)


State 155

  101 struct_declaration: specifier_qualifier_list . struct_declarator_list ';'

    ID   shift, and go to state 191
    ':'  shift, and go to state 192
    '*'  shift, and go to state 113
    '('  shift, and go to state 193

    struct_declarator_list  go to state 194
    struct_declarator       go to state 195
    declarator              go to state 196
    direct_declarator       go to state 197
    pointer                 go to state 198


State 156

  133 type_qualifier_list: type_qualifier .

    $default  reduce using rule 133 (type_qualifier_list)


State 157

  131 pointer: '*' pointer .

    $default  reduce using rule 131 (pointer)


State 158

  130 pointer: '*' type_qualifier_list .
  132        | '*' type_qualifier_list . pointer
  134 type_qualifier_list: type_qualifier_list . type_qualifier

    CONST     shift, and go to state 47
    VOLATILE  shift, and go to state 57
    '*'       shift, and go to state 113

    $default  reduce using rule 130 (pointer)

    type_qualifier  go to state 199
    pointer         go to state 200


State 159

   81 storage_class_specifier: AUTO .

    $default  reduce using rule 81 (storage_class_specifier)


State 160

   79 storage_class_specifier: EXTERN .

    $default  reduce using rule 79 (storage_class_specifier)


State 161

   82 storage_class_specifier: REGISTER .

    $default  reduce using rule 82 (storage_class_specifier)


State 162

   80 storage_class_specifier: STATIC .

    $default  reduce using rule 80 (storage_class_specifier)


State 163

   78 storage_class_specifier: TYPEDEF .

    $default  reduce using rule 78 (storage_class_specifier)


State 164

  154 direct_abstract_declarator: '(' ')' .

    $default  reduce using rule 154 (direct_abstract_declarator)


State 165

  139 parameter_declaration: declaration_specifiers . declarator
  140                      | declaration_specifiers . abstract_declarator
  141                      | declaration_specifiers .

    ID   shift, and go to state 191
    '*'  shift, and go to state 113
    '('  shift, and go to state 201
    '['  shift, and go to state 115

    $default  reduce using rule 141 (parameter_declaration)

    declarator                  go to state 202
    direct_declarator           go to state 197
    pointer                     go to state 203
    abstract_declarator         go to state 204
    direct_abstract_declarator  go to state 118


State 166

   72 declaration_specifiers: storage_class_specifier .
   73                       | storage_class_specifier . declaration_specifiers

    INT       shift, and go to state 44
    FLOAT     shift, and go to state 45
    CHAR      shift, and go to state 46
    AUTO      shift, and go to state 159
    CONST     shift, and go to state 47
    DOUBLE    shift, and go to state 48
    ENUM      shift, and go to state 49
    EXTERN    shift, and go to state 160
    LONG      shift, and go to state 50
    REGISTER  shift, and go to state 161
    SHORT     shift, and go to state 51
    SIGNED    shift, and go to state 52
    STATIC    shift, and go to state 162
    STRUCT    shift, and go to state 53
    TYPEDEF   shift, and go to state 163
    UNION     shift, and go to state 54
    UNSIGNED  shift, and go to state 55
    VOID      shift, and go to state 56
    VOLATILE  shift, and go to state 57

    $default  reduce using rule 72 (declaration_specifiers)

    declaration_specifiers     go to state 205
    storage_class_specifier    go to state 166
    type_specifier             go to state 167
    struct_or_union_specifier  go to state 60
    struct_or_union            go to state 61
    enum_specifier             go to state 63
    type_qualifier             go to state 168


State 167

   74 declaration_specifiers: type_specifier .
   75                       | type_specifier . declaration_specifiers

    INT       shift, and go to state 44
    FLOAT     shift, and go to state 45
    CHAR      shift, and go to state 46
    AUTO      shift, and go to state 159
    CONST     shift, and go to state 47
    DOUBLE    shift, and go to state 48
    ENUM      shift, and go to state 49
    EXTERN    shift, and go to state 160
    LONG      shift, and go to state 50
    REGISTER  shift, and go to state 161
    SHORT     shift, and go to state 51
    SIGNED    shift, and go to state 52
    STATIC    shift, and go to state 162
    STRUCT    shift, and go to state 53
    TYPEDEF   shift, and go to state 163
    UNION     shift, and go to state 54
    UNSIGNED  shift, and go to state 55
    VOID      shift, and go to state 56
    VOLATILE  shift, and go to state 57

    $default  reduce using rule 74 (declaration_specifiers)

    declaration_specifiers     go to state 206
    storage_class_specifier    go to state 166
    type_specifier             go to state 167
    struct_or_union_specifier  go to state 60
    struct_or_union            go to state 61
    enum_specifier             go to state 63
    type_qualifier             go to state 168


State 168

   76 declaration_specifiers: type_qualifier .
   77                       | type_qualifier . declaration_specifiers

    INT       shift, and go to state 44
    FLOAT     shift, and go to state 45
    CHAR      shift, and go to state 46
    AUTO      shift, and go to state 159
    CONST     shift, and go to state 47
    DOUBLE    shift, and go to state 48
    ENUM      shift, and go to state 49
    EXTERN    shift, and go to state 160
    LONG      shift, and go to state 50
    REGISTER  shift, and go to state 161
    SHORT     shift, and go to state 51
    SIGNED    shift, and go to state 52
    STATIC    shift, and go to state 162
    STRUCT    shift, and go to state 53
    TYPEDEF   shift, and go to state 163
    UNION     shift, and go to state 54
    UNSIGNED  shift, and go to state 55
    VOID      shift, and go to state 56
    VOLATILE  shift, and go to state 57

    $default  reduce using rule 76 (declaration_specifiers)

    declaration_specifiers     go to state 207
    storage_class_specifier    go to state 166
    type_specifier             go to state 167
    struct_or_union_specifier  go to state 60
    struct_or_union            go to state 61
    enum_specifier             go to state 63
    type_qualifier             go to state 168


State 169

  155 direct_abstract_declarator: '(' parameter_type_list . ')'

    ')'  shift, and go to state 208


State 170

  135 parameter_type_list: parameter_list .
  136                    | parameter_list . ',' THREE_DOTS
  138 parameter_list: parameter_list . ',' parameter_declaration

    ','  shift, and go to state 209

    $default  reduce using rule 135 (parameter_type_list)


State 171

  137 parameter_list: parameter_declaration .

    $default  reduce using rule 137 (parameter_list)


State 172

  149 direct_abstract_declarator: '(' abstract_declarator . ')'

    ')'  shift, and go to state 210


State 173

  150 direct_abstract_declarator: '[' ']' .

    $default  reduce using rule 150 (direct_abstract_declarator)


State 174

  151 direct_abstract_declarator: '[' constant_expression . ']'

    ']'  shift, and go to state 211


State 175

    3 constant_expression: conditional_expression .

    $default  reduce using rule 3 (constant_expression)


State 176

  148 abstract_declarator: pointer direct_abstract_declarator .
  152 direct_abstract_declarator: direct_abstract_declarator . '[' ']'
  153                           | direct_abstract_declarator . '[' constant_expression ']'
  156                           | direct_abstract_declarator . '(' ')'
  157                           | direct_abstract_declarator . '(' parameter_type_list ')'

    '('  shift, and go to state 177
    '['  shift, and go to state 178

    $default  reduce using rule 148 (abstract_declarator)


State 177

  156 direct_abstract_declarator: direct_abstract_declarator '(' . ')'
  157                           | direct_abstract_declarator '(' . parameter_type_list ')'

    INT       shift, and go to state 44
    FLOAT     shift, and go to state 45
    CHAR      shift, and go to state 46
    AUTO      shift, and go to state 159
    CONST     shift, and go to state 47
    DOUBLE    shift, and go to state 48
    ENUM      shift, and go to state 49
    EXTERN    shift, and go to state 160
    LONG      shift, and go to state 50
    REGISTER  shift, and go to state 161
    SHORT     shift, and go to state 51
    SIGNED    shift, and go to state 52
    STATIC    shift, and go to state 162
    STRUCT    shift, and go to state 53
    TYPEDEF   shift, and go to state 163
    UNION     shift, and go to state 54
    UNSIGNED  shift, and go to state 55
    VOID      shift, and go to state 56
    VOLATILE  shift, and go to state 57
    ')'       shift, and go to state 212

    declaration_specifiers     go to state 165
    storage_class_specifier    go to state 166
    type_specifier             go to state 167
    struct_or_union_specifier  go to state 60
    struct_or_union            go to state 61
    enum_specifier             go to state 63
    type_qualifier             go to state 168
    parameter_type_list        go to state 213
    parameter_list             go to state 170
    parameter_declaration      go to state 171


State 178

  152 direct_abstract_declarator: direct_abstract_declarator '[' . ']'
  153                           | direct_abstract_declarator '[' . constant_expression ']'

    ID         shift, and go to state 9
    STRING     shift, and go to state 10
    INCREMENT  shift, and go to state 11
    DECREMENT  shift, and go to state 12
    '&'        shift, and go to state 14
    '+'        shift, and go to state 15
    '-'        shift, and go to state 16
    '*'        shift, and go to state 17
    '~'        shift, and go to state 18
    '!'        shift, and go to state 19
    '('        shift, and go to state 20
    ']'        shift, and go to state 214

    constant_expression        go to state 215
    conditional_expression     go to state 175
    logical_or_expression      go to state 24
    logical_and_expression     go to state 25
    inclusive_or_expression    go to state 26
    exclusive_or_expression    go to state 27
    and_expression             go to state 28
    equality_expression        go to state 29
    relational_expression      go to state 30
    shift_expression           go to state 31
    additive_expression        go to state 32
    multiplicative_expression  go to state 33
    unary_expression           go to state 99
    unary_operator             go to state 35
    cast_expression            go to state 36
    postfix_expression         go to state 37
    primary_expression         go to state 38


State 179

   58 cast_expression: '(' type_name ')' cast_expression .

    $default  reduce using rule 58 (cast_expression)


State 180

    7 conditional_expression: logical_or_expression '?' expression ':' . conditional_expression

    ID         shift, and go to state 9
    STRING     shift, and go to state 10
    INCREMENT  shift, and go to state 11
    DECREMENT  shift, and go to state 12
    '&'        shift, and go to state 14
    '+'        shift, and go to state 15
    '-'        shift, and go to state 16
    '*'        shift, and go to state 17
    '~'        shift, and go to state 18
    '!'        shift, and go to state 19
    '('        shift, and go to state 20

    conditional_expression     go to state 216
    logical_or_expression      go to state 24
    logical_and_expression     go to state 25
    inclusive_or_expression    go to state 26
    exclusive_or_expression    go to state 27
    and_expression             go to state 28
    equality_expression        go to state 29
    relational_expression      go to state 30
    shift_expression           go to state 31
    additive_expression        go to state 32
    multiplicative_expression  go to state 33
    unary_expression           go to state 99
    unary_operator             go to state 35
    cast_expression            go to state 36
    postfix_expression         go to state 37
    primary_expression         go to state 38


State 181

   68 argument_expression_list: argument_expression_list ',' . assignment_expression

    ID         shift, and go to state 9
    STRING     shift, and go to state 10
    INCREMENT  shift, and go to state 11
    DECREMENT  shift, and go to state 12
    '&'        shift, and go to state 14
    '+'        shift, and go to state 15
    '-'        shift, and go to state 16
    '*'        shift, and go to state 17
    '~'        shift, and go to state 18
    '!'        shift, and go to state 19
    '('        shift, and go to state 20

    assignment_expression      go to state 217
    conditional_expression     go to state 23
    logical_or_expression      go to state 24
    logical_and_expression     go to state 25
    inclusive_or_expression    go to state 26
    exclusive_or_expression    go to state 27
    and_expression             go to state 28
    equality_expression        go to state 29
    relational_expression      go to state 30
    shift_expression           go to state 31
    additive_expression        go to state 32
    multiplicative_expression  go to state 33
    unary_expression           go to state 34
    unary_operator             go to state 35
    cast_expression            go to state 36
    postfix_expression         go to state 37
    primary_expression         go to state 38


State 182

   62 postfix_expression: postfix_expression '(' argument_expression_list ')' .

    $default  reduce using rule 62 (postfix_expression)


State 183

   60 postfix_expression: postfix_expression '[' expression ']' .

    $default  reduce using rule 60 (postfix_expression)


State 184

  112 enum_specifier: ENUM ID '{' enumerator_list . '}'
  115 enumerator_list: enumerator_list . ',' enumerator

    ','  shift, and go to state 186
    '}'  shift, and go to state 218


State 185

  117 enumerator: ID '=' . constant_expression

    ID         shift, and go to state 9
    STRING     shift, and go to state 10
    INCREMENT  shift, and go to state 11
    DECREMENT  shift, and go to state 12
    '&'        shift, and go to state 14
    '+'        shift, and go to state 15
    '-'        shift, and go to state 16
    '*'        shift, and go to state 17
    '~'        shift, and go to state 18
    '!'        shift, and go to state 19
    '('        shift, and go to state 20

    constant_expression        go to state 219
    conditional_expression     go to state 175
    logical_or_expression      go to state 24
    logical_and_expression     go to state 25
    inclusive_or_expression    go to state 26
    exclusive_or_expression    go to state 27
    and_expression             go to state 28
    equality_expression        go to state 29
    relational_expression      go to state 30
    shift_expression           go to state 31
    additive_expression        go to state 32
    multiplicative_expression  go to state 33
    unary_expression           go to state 99
    unary_operator             go to state 35
    cast_expression            go to state 36
    postfix_expression         go to state 37
    primary_expression         go to state 38


State 186

  115 enumerator_list: enumerator_list ',' . enumerator

    ID  shift, and go to state 149

    enumerator  go to state 220


State 187

  111 enum_specifier: ENUM '{' enumerator_list '}' .

    $default  reduce using rule 111 (enum_specifier)


State 188

   94 struct_or_union_specifier: struct_or_union ID '{' struct_declaration_list . '}'
  100 struct_declaration_list: struct_declaration_list . struct_declaration

    INT       shift, and go to state 44
    FLOAT     shift, and go to state 45
    CHAR      shift, and go to state 46
    CONST     shift, and go to state 47
    DOUBLE    shift, and go to state 48
    ENUM      shift, and go to state 49
    LONG      shift, and go to state 50
    SHORT     shift, and go to state 51
    SIGNED    shift, and go to state 52
    STRUCT    shift, and go to state 53
    UNION     shift, and go to state 54
    UNSIGNED  shift, and go to state 55
    VOID      shift, and go to state 56
    VOLATILE  shift, and go to state 57
    '}'       shift, and go to state 221

    type_specifier             go to state 59
    struct_or_union_specifier  go to state 60
    struct_or_union            go to state 61
    struct_declaration         go to state 190
    specifier_qualifier_list   go to state 155
    enum_specifier             go to state 63
    type_qualifier             go to state 64


State 189

   95 struct_or_union_specifier: struct_or_union '{' struct_declaration_list '}' .

    $default  reduce using rule 95 (struct_or_union_specifier)


State 190

  100 struct_declaration_list: struct_declaration_list struct_declaration .

    $default  reduce using rule 100 (struct_declaration_list)


State 191

  122 direct_declarator: ID .

    $default  reduce using rule 122 (direct_declarator)


State 192

  109 struct_declarator: ':' . constant_expression

    ID         shift, and go to state 9
    STRING     shift, and go to state 10
    INCREMENT  shift, and go to state 11
    DECREMENT  shift, and go to state 12
    '&'        shift, and go to state 14
    '+'        shift, and go to state 15
    '-'        shift, and go to state 16
    '*'        shift, and go to state 17
    '~'        shift, and go to state 18
    '!'        shift, and go to state 19
    '('        shift, and go to state 20

    constant_expression        go to state 222
    conditional_expression     go to state 175
    logical_or_expression      go to state 24
    logical_and_expression     go to state 25
    inclusive_or_expression    go to state 26
    exclusive_or_expression    go to state 27
    and_expression             go to state 28
    equality_expression        go to state 29
    relational_expression      go to state 30
    shift_expression           go to state 31
    additive_expression        go to state 32
    multiplicative_expression  go to state 33
    unary_expression           go to state 99
    unary_operator             go to state 35
    cast_expression            go to state 36
    postfix_expression         go to state 37
    primary_expression         go to state 38


State 193

  123 direct_declarator: '(' . declarator ')'

    ID   shift, and go to state 191
    '*'  shift, and go to state 113
    '('  shift, and go to state 193

    declarator         go to state 223
    direct_declarator  go to state 197
    pointer            go to state 198


State 194

  101 struct_declaration: specifier_qualifier_list struct_declarator_list . ';'
  107 struct_declarator_list: struct_declarator_list . ',' struct_declarator

    ','  shift, and go to state 224
    ';'  shift, and go to state 225


State 195

  106 struct_declarator_list: struct_declarator .

    $default  reduce using rule 106 (struct_declarator_list)


State 196

  108 struct_declarator: declarator .
  110                  | declarator . ':' constant_expression

    ':'  shift, and go to state 226

    $default  reduce using rule 108 (struct_declarator)


State 197

  121 declarator: direct_declarator .
  124 direct_declarator: direct_declarator . '[' constant_expression ']'
  125                  | direct_declarator . '[' ']'
  126                  | direct_declarator . '(' parameter_type_list ')'
  127                  | direct_declarator . '(' identifier_list ')'
  128                  | direct_declarator . '(' ')'

    '('  shift, and go to state 227
    '['  shift, and go to state 228

    $default  reduce using rule 121 (declarator)


State 198

  120 declarator: pointer . direct_declarator

    ID   shift, and go to state 191
    '('  shift, and go to state 193

    direct_declarator  go to state 229


State 199

  134 type_qualifier_list: type_qualifier_list type_qualifier .

    $default  reduce using rule 134 (type_qualifier_list)


State 200

  132 pointer: '*' type_qualifier_list pointer .

    $default  reduce using rule 132 (pointer)


State 201

  123 direct_declarator: '(' . declarator ')'
  149 direct_abstract_declarator: '(' . abstract_declarator ')'
  154                           | '(' . ')'
  155                           | '(' . parameter_type_list ')'

    INT       shift, and go to state 44
    FLOAT     shift, and go to state 45
    ID        shift, and go to state 191
    CHAR      shift, and go to state 46
    AUTO      shift, and go to state 159
    CONST     shift, and go to state 47
    DOUBLE    shift, and go to state 48
    ENUM      shift, and go to state 49
    EXTERN    shift, and go to state 160
    LONG      shift, and go to state 50
    REGISTER  shift, and go to state 161
    SHORT     shift, and go to state 51
    SIGNED    shift, and go to state 52
    STATIC    shift, and go to state 162
    STRUCT    shift, and go to state 53
    TYPEDEF   shift, and go to state 163
    UNION     shift, and go to state 54
    UNSIGNED  shift, and go to state 55
    VOID      shift, and go to state 56
    VOLATILE  shift, and go to state 57
    '*'       shift, and go to state 113
    '('       shift, and go to state 201
    ')'       shift, and go to state 164
    '['       shift, and go to state 115

    declaration_specifiers      go to state 165
    storage_class_specifier     go to state 166
    type_specifier              go to state 167
    struct_or_union_specifier   go to state 60
    struct_or_union             go to state 61
    enum_specifier              go to state 63
    type_qualifier              go to state 168
    declarator                  go to state 223
    direct_declarator           go to state 197
    pointer                     go to state 203
    parameter_type_list         go to state 169
    parameter_list              go to state 170
    parameter_declaration       go to state 171
    abstract_declarator         go to state 172
    direct_abstract_declarator  go to state 118


State 202

  139 parameter_declaration: declaration_specifiers declarator .

    $default  reduce using rule 139 (parameter_declaration)


State 203

  120 declarator: pointer . direct_declarator
  146 abstract_declarator: pointer .
  148                    | pointer . direct_abstract_declarator

    ID   shift, and go to state 191
    '('  shift, and go to state 201
    '['  shift, and go to state 115

    $default  reduce using rule 146 (abstract_declarator)

    direct_declarator           go to state 229
    direct_abstract_declarator  go to state 176


State 204

  140 parameter_declaration: declaration_specifiers abstract_declarator .

    $default  reduce using rule 140 (parameter_declaration)


State 205

   73 declaration_specifiers: storage_class_specifier declaration_specifiers .

    $default  reduce using rule 73 (declaration_specifiers)


State 206

   75 declaration_specifiers: type_specifier declaration_specifiers .

    $default  reduce using rule 75 (declaration_specifiers)


State 207

   77 declaration_specifiers: type_qualifier declaration_specifiers .

    $default  reduce using rule 77 (declaration_specifiers)


State 208

  155 direct_abstract_declarator: '(' parameter_type_list ')' .

    $default  reduce using rule 155 (direct_abstract_declarator)


State 209

  136 parameter_type_list: parameter_list ',' . THREE_DOTS
  138 parameter_list: parameter_list ',' . parameter_declaration

    INT         shift, and go to state 44
    FLOAT       shift, and go to state 45
    CHAR        shift, and go to state 46
    AUTO        shift, and go to state 159
    CONST       shift, and go to state 47
    DOUBLE      shift, and go to state 48
    ENUM        shift, and go to state 49
    EXTERN      shift, and go to state 160
    LONG        shift, and go to state 50
    REGISTER    shift, and go to state 161
    SHORT       shift, and go to state 51
    SIGNED      shift, and go to state 52
    STATIC      shift, and go to state 162
    STRUCT      shift, and go to state 53
    TYPEDEF     shift, and go to state 163
    UNION       shift, and go to state 54
    UNSIGNED    shift, and go to state 55
    VOID        shift, and go to state 56
    VOLATILE    shift, and go to state 57
    THREE_DOTS  shift, and go to state 230

    declaration_specifiers     go to state 165
    storage_class_specifier    go to state 166
    type_specifier             go to state 167
    struct_or_union_specifier  go to state 60
    struct_or_union            go to state 61
    enum_specifier             go to state 63
    type_qualifier             go to state 168
    parameter_declaration      go to state 231


State 210

  149 direct_abstract_declarator: '(' abstract_declarator ')' .

    $default  reduce using rule 149 (direct_abstract_declarator)


State 211

  151 direct_abstract_declarator: '[' constant_expression ']' .

    $default  reduce using rule 151 (direct_abstract_declarator)


State 212

  156 direct_abstract_declarator: direct_abstract_declarator '(' ')' .

    $default  reduce using rule 156 (direct_abstract_declarator)


State 213

  157 direct_abstract_declarator: direct_abstract_declarator '(' parameter_type_list . ')'

    ')'  shift, and go to state 232


State 214

  152 direct_abstract_declarator: direct_abstract_declarator '[' ']' .

    $default  reduce using rule 152 (direct_abstract_declarator)


State 215

  153 direct_abstract_declarator: direct_abstract_declarator '[' constant_expression . ']'

    ']'  shift, and go to state 233


State 216

    7 conditional_expression: logical_or_expression '?' expression ':' conditional_expression .

    $default  reduce using rule 7 (conditional_expression)


State 217

   68 argument_expression_list: argument_expression_list ',' assignment_expression .

    $default  reduce using rule 68 (argument_expression_list)


State 218

  112 enum_specifier: ENUM ID '{' enumerator_list '}' .

    $default  reduce using rule 112 (enum_specifier)


State 219

  117 enumerator: ID '=' constant_expression .

    $default  reduce using rule 117 (enumerator)


State 220

  115 enumerator_list: enumerator_list ',' enumerator .

    $default  reduce using rule 115 (enumerator_list)


State 221

   94 struct_or_union_specifier: struct_or_union ID '{' struct_declaration_list '}' .

    $default  reduce using rule 94 (struct_or_union_specifier)


State 222

  109 struct_declarator: ':' constant_expression .

    $default  reduce using rule 109 (struct_declarator)


State 223

  123 direct_declarator: '(' declarator . ')'

    ')'  shift, and go to state 234


State 224

  107 struct_declarator_list: struct_declarator_list ',' . struct_declarator

    ID   shift, and go to state 191
    ':'  shift, and go to state 192
    '*'  shift, and go to state 113
    '('  shift, and go to state 193

    struct_declarator  go to state 235
    declarator         go to state 196
    direct_declarator  go to state 197
    pointer            go to state 198


State 225

  101 struct_declaration: specifier_qualifier_list struct_declarator_list ';' .

    $default  reduce using rule 101 (struct_declaration)


State 226

  110 struct_declarator: declarator ':' . constant_expression

    ID         shift, and go to state 9
    STRING     shift, and go to state 10
    INCREMENT  shift, and go to state 11
    DECREMENT  shift, and go to state 12
    '&'        shift, and go to state 14
    '+'        shift, and go to state 15
    '-'        shift, and go to state 16
    '*'        shift, and go to state 17
    '~'        shift, and go to state 18
    '!'        shift, and go to state 19
    '('        shift, and go to state 20

    constant_expression        go to state 236
    conditional_expression     go to state 175
    logical_or_expression      go to state 24
    logical_and_expression     go to state 25
    inclusive_or_expression    go to state 26
    exclusive_or_expression    go to state 27
    and_expression             go to state 28
    equality_expression        go to state 29
    relational_expression      go to state 30
    shift_expression           go to state 31
    additive_expression        go to state 32
    multiplicative_expression  go to state 33
    unary_expression           go to state 99
    unary_operator             go to state 35
    cast_expression            go to state 36
    postfix_expression         go to state 37
    primary_expression         go to state 38


State 227

  126 direct_declarator: direct_declarator '(' . parameter_type_list ')'
  127                  | direct_declarator '(' . identifier_list ')'
  128                  | direct_declarator '(' . ')'

    INT       shift, and go to state 44
    FLOAT     shift, and go to state 45
    ID        shift, and go to state 237
    CHAR      shift, and go to state 46
    AUTO      shift, and go to state 159
    CONST     shift, and go to state 47
    DOUBLE    shift, and go to state 48
    ENUM      shift, and go to state 49
    EXTERN    shift, and go to state 160
    LONG      shift, and go to state 50
    REGISTER  shift, and go to state 161
    SHORT     shift, and go to state 51
    SIGNED    shift, and go to state 52
    STATIC    shift, and go to state 162
    STRUCT    shift, and go to state 53
    TYPEDEF   shift, and go to state 163
    UNION     shift, and go to state 54
    UNSIGNED  shift, and go to state 55
    VOID      shift, and go to state 56
    VOLATILE  shift, and go to state 57
    ')'       shift, and go to state 238

    declaration_specifiers     go to state 165
    storage_class_specifier    go to state 166
    type_specifier             go to state 167
    struct_or_union_specifier  go to state 60
    struct_or_union            go to state 61
    enum_specifier             go to state 63
    type_qualifier             go to state 168
    parameter_type_list        go to state 239
    parameter_list             go to state 170
    parameter_declaration      go to state 171
    identifier_list            go to state 240


State 228

  124 direct_declarator: direct_declarator '[' . constant_expression ']'
  125                  | direct_declarator '[' . ']'

    ID         shift, and go to state 9
    STRING     shift, and go to state 10
    INCREMENT  shift, and go to state 11
    DECREMENT  shift, and go to state 12
    '&'        shift, and go to state 14
    '+'        shift, and go to state 15
    '-'        shift, and go to state 16
    '*'        shift, and go to state 17
    '~'        shift, and go to state 18
    '!'        shift, and go to state 19
    '('        shift, and go to state 20
    ']'        shift, and go to state 241

    constant_expression        go to state 242
    conditional_expression     go to state 175
    logical_or_expression      go to state 24
    logical_and_expression     go to state 25
    inclusive_or_expression    go to state 26
    exclusive_or_expression    go to state 27
    and_expression             go to state 28
    equality_expression        go to state 29
    relational_expression      go to state 30
    shift_expression           go to state 31
    additive_expression        go to state 32
    multiplicative_expression  go to state 33
    unary_expression           go to state 99
    unary_operator             go to state 35
    cast_expression            go to state 36
    postfix_expression         go to state 37
    primary_expression         go to state 38


State 229

  120 declarator: pointer direct_declarator .
  124 direct_declarator: direct_declarator . '[' constant_expression ']'
  125                  | direct_declarator . '[' ']'
  126                  | direct_declarator . '(' parameter_type_list ')'
  127                  | direct_declarator . '(' identifier_list ')'
  128                  | direct_declarator . '(' ')'

    '('  shift, and go to state 227
    '['  shift, and go to state 228

    $default  reduce using rule 120 (declarator)


State 230

  136 parameter_type_list: parameter_list ',' THREE_DOTS .

    $default  reduce using rule 136 (parameter_type_list)


State 231

  138 parameter_list: parameter_list ',' parameter_declaration .

    $default  reduce using rule 138 (parameter_list)


State 232

  157 direct_abstract_declarator: direct_abstract_declarator '(' parameter_type_list ')' .

    $default  reduce using rule 157 (direct_abstract_declarator)


State 233

  153 direct_abstract_declarator: direct_abstract_declarator '[' constant_expression ']' .

    $default  reduce using rule 153 (direct_abstract_declarator)


State 234

  123 direct_declarator: '(' declarator ')' .

    $default  reduce using rule 123 (direct_declarator)


State 235

  107 struct_declarator_list: struct_declarator_list ',' struct_declarator .

    $default  reduce using rule 107 (struct_declarator_list)


State 236

  110 struct_declarator: declarator ':' constant_expression .

    $default  reduce using rule 110 (struct_declarator)


State 237

  142 identifier_list: ID .

    $default  reduce using rule 142 (identifier_list)


State 238

  128 direct_declarator: direct_declarator '(' ')' .

    $default  reduce using rule 128 (direct_declarator)


State 239

  126 direct_declarator: direct_declarator '(' parameter_type_list . ')'

    ')'  shift, and go to state 243


State 240

  127 direct_declarator: direct_declarator '(' identifier_list . ')'
  143 identifier_list: identifier_list . ',' ID

    ','  shift, and go to state 244
    ')'  shift, and go to state 245


State 241

  125 direct_declarator: direct_declarator '[' ']' .

    $default  reduce using rule 125 (direct_declarator)


State 242

  124 direct_declarator: direct_declarator '[' constant_expression . ']'

    ']'  shift, and go to state 246


State 243

  126 direct_declarator: direct_declarator '(' parameter_type_list ')' .

    $default  reduce using rule 126 (direct_declarator)


State 244

  143 identifier_list: identifier_list ',' . ID

    ID  shift, and go to state 247


State 245

  127 direct_declarator: direct_declarator '(' identifier_list ')' .

    $default  reduce using rule 127 (direct_declarator)


State 246

  124 direct_declarator: direct_declarator '[' constant_expression ']' .

    $default  reduce using rule 124 (direct_declarator)


State 247

  143 identifier_list: identifier_list ',' ID .

    $default  reduce using rule 143 (identifier_list)
